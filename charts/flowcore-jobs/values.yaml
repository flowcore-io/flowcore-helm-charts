## @section Global
## @param environment Environment name
## @default "flowcore"
environment: flowcore
## @param platform Platform that these jobs are part of
platform: flowcore
## @param imageRepository The image repository to use for all jobs in this chart
imageRepository: 305363105399.dkr.ecr.eu-west-1.amazonaws.com
## @param imagePullSecrets List of image pull secrets to use for all jobs in this chart
imagePullSecrets: []
## @section Domain Settings
## @param transport Ingress settings for the transport domain
transport:
  {}
  ## @extra transport.<n> Environment variables for the transport in object format
## @param commonAnnotations Annotations to set for all resources in the chart
commonAnnotations: {}

## @section CronJobs
## @param cronjobs [object] List of cronjobs to deploy
cronjobs: {}
## @extra cronjobs.<cronjobName> Configuration entry for a cronjob
#  DataCleanup:
## @extra cronjobs.<cronjobName>.enabled Whether to deploy this cronjob [boolean]
#    enabled: true
## @extra cronjobs.<cronjobName>.podAnnotations Annotations to set for the pod
#    podAnnotations: {}
## @extra cronjobs.<cronjobName>.component What type of cronjob this is [cleanup, report, maintenance, ...]
#    component: cleanup
## @extra cronjobs.<cronjobName>.restartPolicy The restart policy to use for this cronjob, defaults to OnFailure [Always, OnFailure, Never]
#    restartPolicy: OnFailure
## @extra cronjobs.<cronjobName>.imagePullSecrets List of image pull secrets to use for this cronjob [array]
#    imagePullSecrets: []
## @extra cronjobs.<cronjobName>.source What type of source this cronjob uses [node, go, rust, ...]
#    source: node
## @extra cronjobs.<cronjobName>.schedule The cron schedule expression for this cronjob
#    schedule: "0 * * * *"
## @extra cronjobs.<cronjobName>.concurrencyPolicy How to treat concurrent executions [Allow, Forbid, Replace]
#    concurrencyPolicy: Forbid
## @extra cronjobs.<cronjobName>.failedJobsHistoryLimit The number of failed job runs to keep
#    failedJobsHistoryLimit: 3
## @extra cronjobs.<cronjobName>.successfulJobsHistoryLimit The number of successful job runs to keep
#    successfulJobsHistoryLimit: 3
## @extra cronjobs.<cronjobName>.suspend Whether to suspend the cronjob
#    suspend: false
## @extra cronjobs.<cronjobName>.timeZone The timezone name for the given schedule, default is UTC
#    timeZone: "Etc/UTC"
## @extra cronjobs.<cronjobName>.startingDeadlineSeconds Optional deadline in seconds for starting the job if it misses scheduled time
#    startingDeadlineSeconds: 100
## @extra cronjobs.<cronjobName>.job Configuration for the job
#    job:
## @extra cronjobs.<cronjobName>.job.image The image name to use for this job, excluding the repository [string]
#      image: "data-cleanup"
## @extra cronjobs.<cronjobName>.job.tag The image tag to use for this job [string]
#      tag: "latest"
## @extra cronjobs.<cronjobName>.job.resources Resource configuration for this job
#      resources: {}
## @extra cronjobs.<cronjobName>.job.serviceAccount The service account to use for this job [string]
#      serviceAccount: "some-service-account"
## @extra cronjobs.<cronjobName>.job.activeDeadlineSeconds Optional deadline in seconds the job may be active before the system tries to terminate it
#      activeDeadlineSeconds: 600
## @extra cronjobs.<cronjobName>.job.backoffLimit Specifies the number of retries before marking this job failed
#      backoffLimit: 6
## @extra cronjobs.<cronjobName>.env Environment variables to set for this cronjob
#    env:
## @extra cronjobs.<cronjobName>.env.<variable> Configuration for an environment variable
#      HELLO:
## @extra cronjobs.<cronjobName>.env.<variable>.value The value to set for this environment variable, use valueFrom if you want to use a secret [string]
#        value: World
## @extra cronjobs.<cronjobName>.useTransport Array or Object of transport services to use for this cronjob
#    useTransports:
## @extra cronjobs.<cronjobName>.useTransport.<n> The name of the transport service to use
#      - nats
## @extra cronjobs.<cronjobName>.useTransport.<n>.overrides Overrides for the transport service
#      - name: nats
#        overrides:
## @extra cronjobs.<cronjobName>.useTransport.<n>.overrides.<variable> Configuration for an environment variable
#          NATS_QUEUE:
## @extra cronjobs.<cronjobName>.useTransport.<n>.overrides.<variable>.value The value to set for this environment variable, use valueFrom if you want to use a secret [string]
#            value: user-service
## @extra cronjobs.<cronjobName>.volumes list of config volumes to deploy
## @extra cronjobs.<cronjobName>.volumes.<n> Configuration for a volume
## @extra cronjobs.<cronjobName>.volumes.<n>.config Config Map to use for this volume
## @extra cronjobs.<cronjobName>.volumes.<n>.secret Secret to use for this volume
## @extra cronjobs.<cronjobName>.volumes.<n>.mountPath The mount path to use for this volume
## @extra cronjobs.<cronjobName>.volumes.<n>.subPath The sub path to use for this volume, optional
## @extra cronjobs.<cronjobName>.volumes.<n>.mainMount Whether this volume is mounted to the main container, optional [yes, no] defaults to yes
## @extra cronjobs.<cronjobName>.volumes.<n>.type The type of volume to use [configMap, secret, emptyDir]
## @extra cronjobs.<cronjobName>.affinity Affinity configuration for this cronjob
## @extra cronjobs.<cronjobName>.castAiSpot Configure cronjob for spot instance prefer or required
## @extra cronjobs.<cronjobName>.castAiNodeTemplate Cast AI node template values [string array]
