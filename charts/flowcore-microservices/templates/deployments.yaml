{{- range $microservice, $spec := .Values.deployments }}
{{- if $spec.enabled }}
{{- $serviceName := cat $microservice | kebabcase }}
{{- $component := "service" }}
{{- if $spec.component }}
{{ $component = $spec.component }}
{{- end }}
{{- $env := $.Values.environment | default "flowcore" }}
{{- $platform := $.Values.platform | default "flowcore" }}
{{- $source := "node" }}
{{- if $spec.source }}
{{- $source = $spec.source }}
{{- end }}
{{- $repoBase := $.Values.imageRepository -}}
{{- $replicas := $spec.deployment.replicas | default 1 }}
{{- $httpPort := 3000 }}
{{- if $spec.service }}
{{- if $spec.service.httpPort }}
{{- $httpPort = $spec.service.httpPort }}
{{- end }}
{{- end }}
{{- $baseUrl := $.Values.baseUrl | default "flowcore.io" }}
{{- $host := cat ($serviceName | kebabcase) ".api." $baseUrl }}
{{- $tlsSecretName := "api-flowcore-io-wildcard-tls" }}
{{- if $spec.ingress }}
{{- if $spec.ingress.host }}
{{- $host = $spec.ingress.host }}
{{- end }}
{{- if $spec.ingress.tlsSecret }}
{{- $tlsSecretName = $spec.ingress.tlsSecret }}
{{- end }}
{{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $serviceName }}
  labels: &common_labels
    app: {{ $serviceName }}
    app.kubernetes.io/name: {{ $serviceName }}
    app.kubernetes.io/version: {{ $spec.deployment.tag }}
    app.kubernetes.io/component: {{ $component }}
    app.kubernetes.io/part-of: {{ $platform }}
    tags.datadoghq.com/env: {{ $env }}
    tags.datadoghq.com/service: {{ $serviceName }}
    tags.datadoghq.com/version: {{ $spec.deployment.tag }}
spec:
  replicas: {{ $replicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 2
  selector:
    matchLabels:
      app: {{ $serviceName }}
  template:
    metadata:
      labels: *common_labels
      annotations:
        ad.datadoghq.com/{{ $serviceName }}.logs: '[{"source":"node","service":"{{ $serviceName }}"}]'
    spec:
      containers:
        - name: {{ $serviceName }}
          image: "{{ $repoBase }}/{{ $spec.deployment.image }}:{{ $spec.deployment.tag }}"
          env:
            {{- range $envKey, $envValue := $spec.env }}
            - name: {{ $envKey }}
              {{- $envValue | toYaml | nindent 14 }}
            {{- end }}
            - name: DD_ENV
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/env']
            - name: DD_SERVICE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/service']
            - name: DD_VERSION
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/version']
            - name: DD_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: DD_APM_ENABLED
              value: "true"
          ports:
            - name: "http"
              containerPort: {{ $httpPort }}
            {{- if $spec.service }}
            {{- range $name, $portSpec := $spec.service.extraPorts }}
            - name: {{ $name | kebabcase | quote }}
              containerPort: {{ $portSpec.port }}
            {{- end }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: /health
              port: {{ $httpPort }}
            initialDelaySeconds: 10
            timeoutSeconds: 1
            failureThreshold: 10
{{- if $spec.service }}
{{- if $spec.service.enabled }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ $serviceName }}
spec:
  selector:
    app: {{ $serviceName }}
  ports:
    - name: "http"
      protocol: TCP
      port: {{ $httpPort }}
      targetPort: {{ $httpPort }}
    {{- range $name, $portSpec := $spec.service.extraPorts }}
    - name: {{ $name | quote }}
      protocol: {{ $portSpec.type | default "TCP" }}
      port: {{ $portSpec.port }}
      targetPort: {{ $portSpec.port }}
    {{- end }}
{{ end }}
{{ end }}
{{- if $spec.ingress }}
{{- if $spec.ingress.enabled }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ $serviceName }}
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
    - host: {{ $host }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{ $serviceName }}
                port:
                  number: {{ $httpPort }}
  tls:
    - hosts:
        - {{ $host }}
      secretName: {{ $tlsSecretName }}
{{ end }}
{{ end }}
{{ end }}
{{ end }}