environment: flowcore
platform: flowcore
imageRepository: 305363105399.dkr.ecr.eu-west-1.amazonaws.com
oidcWellKnownUrl: https://auth.someurl.com/.wellknown/something
imagePullSecrets:
  - regcred
webhookBaseURL: https://webhook.api.staging.flowcore.io
transport:
  nats:
    NATS_SERVERS:
      value: nats://localhost:4222
    NATS_QUEUE:
      value: user-queue
commonAnnotations:
  "argocd.argoproj.io/sync-wave": "1"

deployments:
  testService:
    enabled: true
    podAnnotations:
      hello: world
    deployment:
      image: some-test-image
      tag: 0.0.1
      replicas: 1
      serviceAccount: some-service-account
      resources:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 128Mi
    service:
      enabled: true
      extraPorts:
        grpc:
          port: 5000
          type: TCP
    env:
      SOME_VARIABLE:
        value: someValue
      SOME_FROM_VARIABLE:
        valueFrom:
          secretKeyRef:
            name: some-secret
            key: some-key
    ingress:
      enabled: true
      route:
        - hosts:
            - somehost.com
            - www.somehost.com
          tlsSecret: some-tls-secret
        - hosts:
            - somehost2.com
          tlsSecret: some-tls-secret
    volumes:
      subgraphs:
        config: some-config-map
        mountPath: /etc/config1
        subPath: config1.txt
        type: configMap
      subSecret:
        secret: some-secret
        mountPath: /etc/secret
        type: secret
      shared:
        type: emptyDir
        mountPath: /etc/something
        mainMount: "no"
    imagePullSecrets:
      - regcred
    useFlowcoreWebhooks: true
    useTransports:
      - nats
      - name: nats
        overrides:
          NATS_QUEUE:
            value: user-service
    sidecars:
      sideCarA:
        enabled: true
        repo: test-repo
        image: some-test-image
        tag: "0.1.0"
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi
        env:
          SOME_VARIABLE:
            value: someValue
          SOME_FROM_VARIABLE:
            valueFrom:
              secretKeyRef:
                name: some-secret
                key: some-key
        volumes:
          - "shared"
        httpPort: 8080
      sideCarB:
        enabled: true
        image: some-test-image2
        tag: "0.1.0"
        env:
          SOME_VARIABLE:
            value: someValue
          SOME_FROM_VARIABLE:
            valueFrom:
              secretKeyRef:
                name: some-secret
                key: some-key
      sideCarC:
        enabled: true
        image: some-test-image2
        tag: "0.1.0"
        env:
          SOME_VARIABLE:
            value: someValue
          SOME_FROM_VARIABLE:
            valueFrom:
              secretKeyRef:
                name: some-secret
                key: some-key
  testService2:
    enabled: true
    metrics:
      enabled: true
    deployment:
      image: some-test-image
      tag: 0.0.1
      replicas: 1
    castAiSpot: "required"
    service:
      enabled: true
      extraPorts:
        grpc:
          port: 5000
          type: TCP
    env:
      SOME_VARIABLE:
        value: someValue
      SOME_FROM_VARIABLE:
        valueFrom:
          secretKeyRef:
            name: some-secret
            key: some-key
    ingress:
      enabled: true
      annotations:
        nginx.ingress.kubernetes.io/rewrite-target: /
        nginx.org/rule: something
      route:
        - hosts:
            - somehost.com
            - www.somehost.com
          tlsSecret: some-tls-secret
