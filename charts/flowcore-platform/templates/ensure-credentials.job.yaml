apiVersion: v1
kind: ServiceAccount
metadata:
  name: job-dedicated-credentials
  namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: secret-manager
  namespace: {{ .Release.Namespace }}
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: job-dedicated-credentials-secret-manager
  namespace: {{ .Release.Namespace }}
subjects:
  - kind: ServiceAccount
    name: job-dedicated-credentials
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: Role
  name: secret-manager
  apiGroup: rbac.authorization.k8s.io
---
{{ $valkeyHa := index .Values "valkey-ha" }}
{{ $valkeySingle := index .Values "valkey-single" }}
{{ $postgresHa := index .Values "postgresql-ha" }}
{{ $cassandra := index .Values "cassandra" }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-ensure-credentials-{{ randAlphaNum 5 | lower }}
  namespace: {{ .Release.Namespace }}
  annotations:
    "argocd.argoproj.io/sync-wave": "-1"
spec:
  # Retry up to 6 times
  backoffLimit: 6
  # Set a deadline of 5 minutes (300 seconds)
  activeDeadlineSeconds: 300
  template:
    spec:
      
      restartPolicy: OnFailure
      serviceAccountName: job-dedicated-credentials
      containers:
        - name: ensure-credentials
          image: {{ .Values.ensureCredentials.image.repository }}:{{ .Values.ensureCredentials.image.tag }}
          env:
            - name: POSTGRES_HOST
              value: "postgresql-ha-pgpool"
            - name: POSTGRES_USERNAME
              value: "postgres"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ $postgresHa.postgresql.existingSecret }}
                  key: password
            - name: CASSANDRA_CONTACT_POINTS
              value: "flowcore-cassandra"
            - name: CASSANDRA_USERNAME
              value: "cassandra"
            - name: CASSANDRA_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ $cassandra.dbUser.existingSecret }}
                  key: cassandra-password
            - name: VALKEY_HA_PRIMARY_SET
              value: {{ $valkeyHa.primary.primarySet }}
            - name: VALKEY_HA_SECRET_NAME
              value: {{ $valkeyHa.auth.existingSecret }}
            - name: VALKEY_HA_SECRET_KEY
              value: {{ $valkeyHa.auth.existingSecretPasswordKey }}
            - name: VALKEY_SINGLE_SECRET_NAME
              value: {{ $valkeySingle.auth.existingSecret }}
            - name: VALKEY_SINGLE_SECRET_KEY
              value: {{ $valkeySingle.auth.existingSecretPasswordKey }}
          resources:
            {{- toYaml .Values.ensureCredentials.resources | nindent 12 }}
---

