## @section Flowcore Platform Configuration
flowcore:
  ## @param flowcore.tenant [string] The tenant name (e.g. "my-org")
  tenant: example-org
  ## @param flowcore.configurationRepository [string] The configuration repository (e.g. "https://github.com/example-org/flowcore-configuration")
  configurationRepository: https://github.com/example-org/flowcore-configuration.git
  ## @param flowcore.keyspace [object] The keyspace configuration
  keyspace:
    ## @param flowcore.keyspace.replicationFactor [default: 3] The number of replicas
    replicationFactor: 3
  ## @param flowcore.domain [default: example.com] The domain
  domain: example.com
  ## @param flowcore.tlsSecret [default: example-tls] The TLS secret
  tlsSecret: example-tls

## @section ArgoCD Configuration
argocd:
  ## @param argocd.namespace [default: argocd] The namespace
  namespace: argocd
  ## @param argocd.project [default: default] The project
  project: default

## @section Cassandra Configuration
cassandra:
  ## @param cassandra.enabled [default: true] Whether to install the Cassandra instance
  enabled: true
  ## @param cassandra.dbUser [object] The Cassandra user configuration
  dbUser:
    ## @param cassandra.dbUser.existingSecret [default: platform-source-cassandra-user] The name of the existing secret containing the Cassandra user and password
    existingSecret: "platform-source-cassandra-user"
  ## @param cassandra.cluster [object] The Cassandra cluster configuration
  cluster:
    ## @param cassandra.cluster.name [default: platform-source] The name of the Cassandra cluster
    name: platform-source
    ## @param cassandra.cluster.seedCount [default: 2] The number of seed nodes
    seedCount: 2
    ## @param cassandra.cluster.numTokens [default: 16] The number of tokens
    numTokens: 16
    ## @param cassandra.cluster.datacenter [default: datacenter1] The datacenter name
    datacenter: datacenter1
  ## @param cassandra.replicaCount [default: 3] The number of replicas
  replicaCount: 3
  ## @param cassandra.resources [object] The resources for the Cassandra instance
  resources:
    requests:
      ## @param cassandra.resources.requests.cpu [default: 8] The CPU request
      cpu: 8
      ## @param cassandra.resources.requests.memory [default: 16Gi] The memory request
      memory: 16Gi
    limits:
      ## @param cassandra.resources.limits.cpu [default: 8] The CPU limit
      cpu: 8
      ## @param cassandra.resources.limits.memory [default: 16Gi] The memory limit
      memory: 16Gi
  ## @param cassandra.persistence [object] The persistence configuration
  persistence:
    ## @extra cassandra.persistence.storageClass [string] The storage class for the persistent volume
    ## @param cassandra.persistence.size [default: 512Gi] The size of the persistent volume
    size: 512Gi
  ## @param cassandra.metrics [object] The metrics configuration
  metrics:
    ## @param cassandra.metrics.enabled [default: true] Whether to enable the metrics
    enabled: true
  jvm:
    ## @param cassandra.jvm.maxHeapSize [default: 2048m] The maximum heap size (1/4 or 1/2 of the total memory)
    maxHeapSize: 8G
    ## @param cassandra.jvm.newHeapSize [default: 1024m] The new heap size (1/4 of the max heap size)
    newHeapSize: 2G

## @section Valkey HA Configuration
valkey-ha:
  ## @param valkey-ha.enabled [default: true] Whether to install the Valkey HA instance
  enabled: true
  ## @param valkey-ha.nameOverride [default: valkey-ha] The name override
  nameOverride: valkey-ha
  ## @param valkey-ha.fullnameOverride [default: valkey-ha] The full name override
  fullnameOverride: valkey-ha
  ## @param valkey-ha.architecture [default: replication] The architecture to use
  architecture: replication
  sentinel:
    ## @param valkey-ha.sentinel.enabled [default: true] Whether to install the Sentinel instance
    enabled: true
    ## @param valkey-ha.sentinel.primarySet [default: fcmprimary] The primary set to use
    primarySet: fcmprimary
    ## @extra valkey-ha.sentinel.resources [object] The resources for the Sentinel instance
  auth:
    ## @param valkey-ha.auth.enabled [default: true] Whether to install the Auth instance
    enabled: true
    ## @param valkey-ha.auth.sentinel [default: true] Whether to use the Sentinel instance
    sentinel: true
    ## @param valkey-ha.auth.existingSecret [default: platform-source-valkey-ha] The name of the existing secret containing the Auth password
    existingSecret: platform-source-valkey-ha
    ## @param valkey-ha.auth.existingSecretPasswordKey [default: password] The key in the existing secret containing the Auth password
    existingSecretPasswordKey: password
  primary:
    ## @param valkey-ha.primary.enabled [default: true] Whether to install the primary instance
    enabled: true
    ## @param valkey-ha.primary.replicaCount [default: 1] The number of replicas
    replicaCount: 1
    ## @extra valkey-ha.primary.resources [object] The resources for the primary instance
    persistence:
      ## @param valkey-ha.primary.persistence.enabled [default: true] Whether to install the persistence
      enabled: true
      ## @param valkey-ha.primary.persistence.size [default: 50Gi] The size of the persistent volume
      size: 50Gi
      ## @extra valkey-ha.primary.persistence.storageClass [string] The storage class for the persistent volume
  replica:
    ## @param valkey-ha.replica.enabled [default: true] Whether to install the replica instance
    enabled: true
    ## @param valkey-ha.replica.replicaCount [default: 3] The number of replicas
    replicaCount: 3
    ## @extra valkey-ha.replica.resources [object] The resources for the replica instance
    persistence:
      ## @param valkey-ha.replica.persistence.enabled [default: true] Whether to install the persistence
      enabled: true
      ## @param valkey-ha.replica.persistence.size [default: 50Gi] The size of the persistent volume
      size: 50Gi
      ## @extra valkey-ha.replica.persistence.storageClass [string] The storage class for the persistent volume

## @section Valkey Single Configuration
valkey-single:
  ## @param valkey-single.enabled [default: false] Whether to install the Valkey single instance
  enabled: true
  ## @param valkey-single.nameOverride [default: valkey-single] The name override
  nameOverride: valkey-single
  ## @param valkey-single.fullnameOverride [default: valkey-single] The full name override
  fullnameOverride: valkey-single
  ## @param valkey-single.architecture [default: single] The architecture to use
  architecture: standalone
  auth:
    ## @param valkey-single.auth.enabled [default: true] Whether to install the Auth instance
    enabled: true
    ## @param valkey-single.auth.existingSecret [default: platform-source-valkey-single] The name of the existing secret containing the Auth password
    existingSecret: platform-source-valkey-single
    ## @param valkey-single.auth.existingSecretPasswordKey [default: password] The key in the existing secret containing the Auth password
    existingSecretPasswordKey: password
  primary:
    ## @param valkey-single.primary.enabled [default: true] Whether to install the primary instance
    enabled: true
    ## @param valkey-single.primary.replicaCount [default: 1] The number of replicas
    replicaCount: 1
    ## @extra valkey-single.primary.resources [object] The resources for the primary instance
    persistence:
      ## @param valkey-single.primary.persistence.enabled [default: true] Whether to install the persistence
      enabled: true
      ## @param valkey-single.primary.persistence.size [default: 50Gi] The size of the persistent volume
      size: 50Gi
      ## @extra valkey-single.primary.persistence.storageClass [string] The storage class for the persistent volume

## @section Valkey Cache Configuration
valkey-cache:
  ## @param valkey-cache.enabled [default: false] Whether to install the Valkey cache instance
  enabled: true
  ## @param valkey-cache.nameOverride [default: valkey-cache] The name override
  nameOverride: valkey-cache
  ## @param valkey-cache.fullnameOverride [default: valkey-cache] The full name override
  fullnameOverride: valkey-cache
  ## @param valkey-cache.architecture [default: single] The architecture to use
  architecture: standalone
  auth:
    ## @param valkey-cache.auth.enabled [default: false] Whether to install the Auth instance
    enabled: false
  primary:
    ## @param valkey-cache.primary.enabled [default: true] Whether to install the primary instance
    enabled: true
    ## @param valkey-cache.primary.replicaCount [default: 1] The number of replicas
    replicaCount: 1
    ## @extra valkey-cache.primary.resources [object] The resources for the primary instance
    persistence:
      ## @param valkey-cache.primary.persistence.enabled [default: true] Whether to install the persistence
      enabled: true
      ## @param valkey-cache.primary.persistence.size [default: 5Gi] The size of the persistent volume
      size: 5Gi
      ## @extra valkey-cache.primary.persistence.storageClass [string] The storage class for the persistent volume

## @section NATS Configuration
nats:
  ## @param nats.nameOverride [default: nats] The name override
  nameOverride: nats
  ## @param nats.fullnameOverride [default: nats] The full name override
  fullnameOverride: nats
  ## @param nats.enabled [default: true] Whether to install the NATS instance
  enabled: true
  ## @param nats.config [object] The NATS configuration
  config:
    cluster:
      ## @param nats.config.cluster.enabled [default: true] Whether to install the NATS cluster
      enabled: true
      ## @param nats.config.cluster.replicas [default: 3] The number of replicas
      replicas: 3
    jetstream:
      ## @param nats.config.jetstream.enabled [default: true] Whether to install the NATS JetStream instance
      enabled: true
      ## @param nats.config.jetstream.fileStore.pvc.size [default: 10Gi] The size of the persistent volume
      fileStore:
        pvc:
          ## @param nats.config.jetstream.fileStore.pvc.size [default: 10Gi] The size of the persistent volume
          size: 10Gi
          ## @extra nats.config.jetstream.fileStore.pvc.storageClass [string] The storage class for the persistent volume
  container:
    env:
      ## @param nats.container.env.GOMEMLIMIT [default: 7GiB] The memory limit, 90% of the memory limit, different from k8s units, suffix must be B, KiB, MiB, GiB, or TiB
      GOMEMLIMIT: 7GiB
    merge:
      resources:
        requests:
          ## @param nats.container.merge.resources.requests.cpu [default: 2] The CPU request
          cpu: "2"
          ## @param nats.container.merge.resources.requests.memory [default: 8Gi] The memory request
          memory: 8Gi
        limits:
          ## @param nats.container.merge.resources.limits.cpu [default: 2] The CPU limit
          cpu: "2"
          ## @param nats.container.merge.resources.limits.memory [default: 8Gi] The memory limit
          memory: 8Gi

## @section PostgreSQL Operator Configuration
postgresql-operator:
  ## @param postgresql-operator.enabled [default: true] Whether to install the PostgreSQL operator
  enabled: true
  ## @param postgresql-operator.fullnameOverride [default: postgresql-operator] The full name override
  fullnameOverride: cnpg-operator

## @section PostgreSQL Configuration
postgresql:
  ## @param postgresql.enabled [default: true] Whether to install the PostgreSQL instance
  enabled: true
  ## @param postgresql.existingSecret [default: platform-source-postgresql-credentials] The name of the existing secret containing the PostgreSQL credentials
  existingSecret: platform-source-postgresql-credentials
  ## @param postgresql.replicas [default: 3] The number of replicas
  replicas: 3
  persistence:
    ## @param postgresql.persistence.size [default: 200Gi] The size of the persistent volume
    size: 200Gi
    ## @extra postgresql.persistence.storageClass [string] The storage class for the persistent volume
  ## @extra postgresql.tolerations [object]
  ## @extra postgresql.resources [object]
  ## @extra env [object]
  ## @extra config [object]
  ## @extra bootstrap [object]
  ## @extra metadata [object]
  ## @extra serverAltDNSNames [object]

## @section ArangoDB Operator Configuration
arangodb-operator:
  ## @param arangodb-operator.enabled [default: true] Whether to install the ArangoDB operator
  enabled: true

## @section ArangoDB Configuration
arangodb:
  ## @param arangodb.enabled [default: true] Whether to install the ArangoDB instance
  enabled: true
  ## @param arangodb.storage [default: 30Gi] The size of the persistent volume
  storage: 30Gi
  ## @param arangodb.replicas [default: 3] The number of replicas
  replicas: 3
  ## @param arangodb.existingSecret [default: platform-source-arangodb-credentials] The name of the existing secret containing the ArangoDB root password
  existingSecret: platform-source-arangodb-credentials

## @section Ensure Credentials
ensureCredentials:
  ## @param ensureCredentials.enabled [default: true] Whether to install the ensure credentials job
  enabled: true
  ## @param ensureCredentials.image [object] The image
  image:
    ## @param ensureCredentials.image.repository [default: flowcoreio/job-create-dedicated-credentials] The image repository
    repository: flowcoreio/job-create-dedicated-credentials
    ## @param ensureCredentials.image.tag [default: 1.10.0] The image tag
    tag: 1.11.0
  ## @param ensureCredentials.resources [object] The resources for the ensure credentials job
  resources:
    ## @param ensureCredentials.resources.limits.cpu [default: 100m] The CPU limit
    limits:
      ## @param ensureCredentials.resources.limits.cpu [default: 100m] The CPU limit
      cpu: 100m
      ## @param ensureCredentials.resources.limits.memory [default: 128Mi] The memory limit
      memory: 128Mi
    ## @param ensureCredentials.resources.requests.cpu [default: 50m] The CPU request
    requests:
      ## @param ensureCredentials.resources.requests.cpu [default: 50m] The CPU request
      cpu: 50m
      ## @param ensureCredentials.resources.requests.memory [default: 64Mi] The memory request
      memory: 64Mi

## @section Flowcore Platform Common Configuration
flowcore-microservices:
  ## @param flowcore-microservices.enabled [default: true] Whether to install the Flowcore Platform Services
  enabled: true
  ## @param flowcore-microservices.imageRepository [default: flowcore-io] The image repository
  imageRepository: flowcoreio
  ## @param flowcore-microservices.oidcWellKnownUrl [default: https://auth.flowcore.io/realms/flowcore/.well-known/openid-configuration] The OIDC well-known URL
  oidcWellKnownUrl: https://auth.flowcore.io/realms/flowcore/.well-known/openid-configuration
  transport:
    nats:
      NATS_SERVERS:
        ## @param flowcore-microservices.transport.nats.NATS_SERVERS.value [default: nats://nats:4222] The NATS servers
        value: nats://nats:4222
  commonAnnotations:
    ## @param flowcore-microservices.commonAnnotations.argocd.argoproj.io/sync-wave [default: "-3"] The sync wave
    "argocd.argoproj.io/sync-wave": "3"
  deployments:
    ## @section Flowcore Ingestion Channel
    ingestionChannel:
      ## @param flowcore-microservices.deployments.ingestionChannel.enabled [default: true] Whether to install the Ingestion Channel instance
      enabled: true
      deployment:
        ## @param flowcore-microservices.deployments.ingestionChannel.deployment.image [default: service-ingestion] The image
        image: service-ingestion
        ## @param flowcore-microservices.deployments.ingestionChannel.deployment.tag [default: 1.1.0] The tag
        tag: 1.2.0
        ## @param flowcore-microservices.deployments.ingestionChannel.deployment.replicas [default: 2] The number of replicas
        replicas: 2
      metrics:
        ## @param flowcore-microservices.deployments.ingestionChannel.metrics.enabled [default: true] Whether to install the metrics
        enabled: true
        ## @param flowcore-microservices.deployments.ingestionChannel.metrics.port [default: 3001] The port
        port: 4000
      ## @param flowcore-microservices.deployments.ingestionChannel.useTransports [default: nats] The transports to use
      useTransports:
        - nats
      ## @param flowcore-microservices.deployments.ingestionChannel.castAiSpot [default: preferred] The castAiSpot
      castAiSpot: preferred
      env:
        ## @param flowcore-microservices.deployments.ingestionChannel.env.REDIS_URL [object] The Redis URL
        REDIS_URL:
          valueFrom:
            secretKeyRef:
              name: ingestion-channel-credentials
              key: redis-sentinel-rw
        ## @param flowcore-microservices.deployments.ingestionChannel.env.METRICS_SERVICE_NAME [object, default: ingestion_channel] The metrics service name
        METRICS_SERVICE_NAME:
          value: ingestion_channel
        ## @param flowcore-microservices.deployments.ingestionChannel.env.DEFAULT_TTL_ON_STORED_EVENT [object, default: 259200] The default TTL on stored event in seconds
        DEFAULT_TTL_ON_STORED_EVENT:
          value: "259200"
        ## @extra flowcore-microservices.deployments.ingestionChannel.env.NATS_QUEUE [object] The NATS queue
        ## @param flowcore-microservices.deployments.ingestionChannel.env.CASSANDRA_CONTACT_POINTS [object, default: flowcore-cassandra] The Cassandra contact points
        CASSANDRA_CONTACT_POINTS:
          value: flowcore-cassandra
        ## @param flowcore-microservices.deployments.ingestionChannel.env.CASSANDRA_USERNAME [object, default: cassandra-username in ingestion-channel-credentials secret] The Cassandra username
        CASSANDRA_USERNAME:
          valueFrom:
            secretKeyRef:
              name: ingestion-channel-credentials
              key: cassandra-username
        ## @param flowcore-microservices.deployments.ingestionChannel.env.CASSANDRA_PASSWORD [object, default: cassandra-password in ingestion-channel-credentials secret] The Cassandra password
        CASSANDRA_PASSWORD:
          valueFrom:
            secretKeyRef:
              name: ingestion-channel-credentials
              key: cassandra-password
        ## @param flowcore-microservices.deployments.ingestionChannel.env.CASSANDRA_FLOWCORE_KEYSPACE [object, default: flowcore] The Cassandra Flowcore keyspace
        CASSANDRA_FLOWCORE_KEYSPACE:
          value: flowcore
        ## @param flowcore-microservices.deployments.ingestionChannel.env.CASSANDRA_CLIENT_KEYSPACE [object, default: flowcore_platform_data] The Cassandra client keyspace
        CASSANDRA_CLIENT_KEYSPACE:
          value: flowcore_platform_data
        ## @param flowcore-microservices.deployments.ingestionChannel.env.LOG_LEVEL [object, default: info] The log level
        LOG_LEVEL:
          value: info
        ## @param flowcore-microservices.deployments.ingestionChannel.env.FLOWCORE_DEPLOYMENT_TYPE [object] The Flowcore deployment type, supported values: dedicated, cloud
        FLOWCORE_DEPLOYMENT_TYPE:
          value: "dedicated"
        ## @param flowcore-microservices.deployments.ingestionChannel.env.FLOWCORE_TENANT_ID [object, default: tenant-id in tenant-credentials secret] The Flowcore tenant ID
        FLOWCORE_TENANT_ID:
          valueFrom:
            secretKeyRef:
              name: tenant-credentials
              key: tenant-id
        ## @param flowcore-microservices.deployments.ingestionChannel.env.FLOWCORE_TENANT_API_URL [object, default: https://tenant.api.flowcore.io] The Flowcore tenant API URL
        FLOWCORE_TENANT_API_URL:
          value: https://tenant.api.flowcore.io
        ## @param flowcore-microservices.deployments.ingestionChannel.env.FLOWCORE_API_KEY [object, default: api-key in tenant-credentials secret] The Flowcore API key
        FLOWCORE_API_KEY:
          valueFrom:
            secretKeyRef:
              name: tenant-credentials
              key: api-key

    ## @section Flowcore Legacy Client Event Source API
    legacyClientEventSourceApi:
      ## @param flowcore-microservices.deployments.legacyClientEventSourceApi.enabled [default: true] Whether to install the legacy client event source API
      enabled: true
      deployment:
        ## @param flowcore-microservices.deployments.legacyClientEventSourceApi.deployment.image [default: source-event-source] The image
        image: source-event-source
        ## @param flowcore-microservices.deployments.legacyClientEventSourceApi.deployment.tag [default: 2.10.3] The tag
        tag: 2.10.3
        ## @param flowcore-microservices.deployments.legacyClientEventSourceApi.deployment.replicas [default: 2] The number of replicas
        replicas: 2
      env:
        ## @param flowcore-microservices.deployments.legacyClientEventSourceApi.env.CASSANDRA_CONTACT_POINTS [object, default: flowcore-cassandra] The Cassandra contact points
        CASSANDRA_CONTACT_POINTS:
          value: flowcore-cassandra
        ## @param flowcore-microservices.deployments.legacyClientEventSourceApi.env.CASSANDRA_KEYSPACE [object, default: flowcore_platform_data] The Cassandra keyspace
        CASSANDRA_KEYSPACE:
          value: flowcore_platform_data
        ## @param flowcore-microservices.deployments.legacyClientEventSourceApi.env.CASSANDRA_USERNAME [object, default: cassandra-username in legacy-client-event-source-credentials secret] The Cassandra username
        CASSANDRA_USERNAME:
          valueFrom:
            secretKeyRef:
              name: legacy-client-event-source-credentials
              key: cassandra-username
        ## @param flowcore-microservices.deployments.legacyClientEventSourceApi.env.CASSANDRA_PASSWORD [object, default: cassandra-password in legacy-client-event-source-credentials secret] The Cassandra password
        CASSANDRA_PASSWORD:
          valueFrom:
            secretKeyRef:
              name: legacy-client-event-source-credentials
              key: cassandra-password
        ## @param flowcore-microservices.deployments.legacyClientEventSourceApi.env.GRPC_URL [object, default: 0.0.0.0:5000] The GRPC URL
        GRPC_URL:
          value: 0.0.0.0:5000
        ## @param flowcore-microservices.deployments.legacyClientEventSourceApi.env.CASSANDRA_DEFAULT_REPLICATION_STRATEGY [object, default: NetworkTopologyStrategy] The Cassandra default replication strategy
        CASSANDRA_DEFAULT_REPLICATION_STRATEGY:
          value: NetworkTopologyStrategy
        ## @param flowcore-microservices.deployments.legacyClientEventSourceApi.env.CASSANDRA_DEFAULT_REPLICATION_FACTOR [object, default: 3] The Cassandra default replication factor
        CASSANDRA_DEFAULT_REPLICATION_FACTOR:
          value: "3"
        ## @param flowcore-microservices.deployments.legacyClientEventSourceApi.env.ARCHIVE_BUCKET_NAME [object, default: flowcore-platform-archive] The archive bucket name
        ARCHIVE_BUCKET_NAME:
          value: flowcore-platform-archive
        ## @param flowcore-microservices.deployments.legacyClientEventSourceApi.env.ARCHIVE_REGION [object, default: eu-west-1] The archive region
        ARCHIVE_REGION:
          value: "eu-west-1"
        ## @param flowcore-microservices.deployments.legacyClientEventSourceApi.env.ARCHIVE_ACCESS_KEY_ID [object, default: aws-access-key-id in aws-credentials secret] The archive access key ID
        ARCHIVE_ACCESS_KEY_ID:
          valueFrom:
            secretKeyRef:
              name: aws-credentials
              key: aws-access-key-id
        ## @param flowcore-microservices.deployments.legacyClientEventSourceApi.env.ARCHIVE_SECRET_ACCESS_KEY [object, default: aws-secret-access-key in aws-credentials secret] The archive secret access key
        ARCHIVE_SECRET_ACCESS_KEY:
          valueFrom:
            secretKeyRef:
              name: aws-credentials
              key: aws-secret-access-key
        ## @param flowcore-microservices.deployments.legacyClientEventSourceApi.env.HOT_STORAGE_RETENTION [object, default: 3] The hot storage retention
        HOT_STORAGE_RETENTION:
          value: "3"
        ## @param flowcore-microservices.deployments.legacyClientEventSourceApi.env.CACHE_USE_REMOTE [object, default: true] Whether to use the remote cache
        CACHE_USE_REMOTE:
          value: "true"
        ## @param flowcore-microservices.deployments.legacyClientEventSourceApi.env.CACHE_REDIS_URL [object, default: redis-url in legacy-client-event-source-credentials secret] The Redis URL
        CACHE_REDIS_URL:
          valueFrom:
            secretKeyRef:
              name: legacy-client-event-source-credentials
              key: redis-url
      service:
        ## @param flowcore-microservices.deployments.legacyClientEventSourceApi.service.enabled [default: true] Whether to install the service
        enabled: true
        extraPorts:
          grpc:
            ## @param flowcore-microservices.deployments.legacyClientEventSourceApi.service.extraPorts.grpc.port [default: 5000] The port for the GRPC service
            port: "5000"

    ## @section Flowcore Legacy Platform Event Source API
    legacyPlatformEventSourceApi:
      ## @param flowcore-microservices.deployments.legacyPlatformEventSourceApi.enabled [default: true] Whether to install the legacy platform event source API
      enabled: true
      deployment:
        ## @param flowcore-microservices.deployments.legacyPlatformEventSourceApi.deployment.image [default: source-event-source] The image
        image: source-event-source
        ## @param flowcore-microservices.deployments.legacyPlatformEventSourceApi.deployment.tag [default: 2.10.3] The tag
        tag: 2.10.3
        ## @param flowcore-microservices.deployments.legacyPlatformEventSourceApi.deployment.replicas [default: 2] The number of replicas
        replicas: 2
      env:
        ## @param flowcore-microservices.deployments.legacyPlatformEventSourceApi.env.CASSANDRA_CONTACT_POINTS [object, default: flowcore-cassandra] The Cassandra contact points
        CASSANDRA_CONTACT_POINTS:
          value: flowcore-cassandra
        ## @param flowcore-microservices.deployments.legacyPlatformEventSourceApi.env.CASSANDRA_KEYSPACE [object, default: flowcore] The Cassandra keyspace
        CASSANDRA_KEYSPACE:
          value: flowcore
        ## @param flowcore-microservices.deployments.legacyPlatformEventSourceApi.env.CASSANDRA_USERNAME [object, default: cassandra-username in legacy-platform-event-source-credentials secret] The Cassandra username
        CASSANDRA_USERNAME:
          valueFrom:
            secretKeyRef:
              name: legacy-platform-event-source-credentials
              key: cassandra-username
        ## @param flowcore-microservices.deployments.legacyPlatformEventSourceApi.env.CASSANDRA_PASSWORD [object, default: cassandra-password in legacy-platform-event-source-credentials secret] The Cassandra password
        CASSANDRA_PASSWORD:
          valueFrom:
            secretKeyRef:
              name: legacy-platform-event-source-credentials
              key: cassandra-password
        ## @param flowcore-microservices.deployments.legacyPlatformEventSourceApi.env.GRPC_URL [object, default: 0.0.0.0:5000] The GRPC URL
        GRPC_URL:
          value: 0.0.0.0:5000
        ## @param flowcore-microservices.deployments.legacyPlatformEventSourceApi.env.CASSANDRA_DEFAULT_REPLICATION_STRATEGY [object, default: NetworkTopologyStrategy] The Cassandra default replication strategy
        CASSANDRA_DEFAULT_REPLICATION_STRATEGY:
          value: NetworkTopologyStrategy
        ## @param flowcore-microservices.deployments.legacyPlatformEventSourceApi.env.CASSANDRA_DEFAULT_REPLICATION_FACTOR [object, default: 3] The Cassandra default replication factor
        CASSANDRA_DEFAULT_REPLICATION_FACTOR:
          value: "3"
        ## @param flowcore-microservices.deployments.legacyPlatformEventSourceApi.env.ARCHIVE_BUCKET_NAME [object, default: flowcore-platform-archive] The archive bucket name
        ARCHIVE_BUCKET_NAME:
          value: flowcore-platform-archive
        ## @param flowcore-microservices.deployments.legacyPlatformEventSourceApi.env.ARCHIVE_REGION [object, default: eu-west-1] The archive region
        ARCHIVE_REGION:
          value: "eu-west-1"
        ## @param flowcore-microservices.deployments.legacyPlatformEventSourceApi.env.ARCHIVE_ACCESS_KEY_ID [object, default: aws-access-key-id in aws-credentials secret] The archive access key ID
        ARCHIVE_ACCESS_KEY_ID:
          valueFrom:
            secretKeyRef:
              name: aws-credentials
              key: aws-access-key-id
        ## @param flowcore-microservices.deployments.legacyPlatformEventSourceApi.env.ARCHIVE_SECRET_ACCESS_KEY [object, default: aws-secret-access-key in aws-credentials secret] The archive secret access key
        ARCHIVE_SECRET_ACCESS_KEY:
          valueFrom:
            secretKeyRef:
              name: aws-credentials
              key: aws-secret-access-key
        ## @param flowcore-microservices.deployments.legacyPlatformEventSourceApi.env.HOT_STORAGE_RETENTION [object, default: 3] The hot storage retention
        HOT_STORAGE_RETENTION:
          value: "3"
        ## @param flowcore-microservices.deployments.legacyPlatformEventSourceApi.env.CACHE_USE_REMOTE [object, default: true] Whether to use the remote cache
        CACHE_USE_REMOTE:
          value: "true"
        ## @param flowcore-microservices.deployments.legacyPlatformEventSourceApi.env.CACHE_REDIS_URL [object, default: redis-url in legacy-platform-event-source-credentials secret] The Redis URL
        CACHE_REDIS_URL:
          valueFrom:
            secretKeyRef:
              name: legacy-platform-event-source-credentials
              key: redis-url
      service:
        ## @param flowcore-microservices.deployments.legacyPlatformEventSourceApi.service.enabled [default: true] Whether to install the service
        enabled: true
        extraPorts:
          grpc:
            ## @param flowcore-microservices.deployments.legacyPlatformEventSourceApi.service.extraPorts.grpc.port [default: 5000] The port for the GRPC service
            port: "5000"

    ## @section Flowcore Event Source API
    eventSourceApi:
      ## @param flowcore-microservices.deployments.eventSourceApi.enabled [default: true] Whether to install the event source API
      enabled: true
      deployment:
        ## @param flowcore-microservices.deployments.eventSourceApi.deployment.image [default: source-event-source] The image
        image: service-event-source-api
        ## @param flowcore-microservices.deployments.eventSourceApi.deployment.tag [default: 1.17.3] The tag
        tag: 1.17.4
        ## @param flowcore-microservices.deployments.eventSourceApi.deployment.replicas [default: 2] The number of replicas
        replicas: 2
      ## @param flowcore-microservices.deployments.eventSourceApi.service [object] The service
      service:
        ## @param flowcore-microservices.deployments.eventSourceApi.service.enabled [default: true] Whether to enable the service
        enabled: true
        ## @param flowcore-microservices.deployments.eventSourceApi.service.port [default: 3000] The service port
        port: 3000
        extraPorts:
          metrics:
            ## @param flowcore-microservices.deployments.eventSourceApi.service.extraPorts.metrics.port [default: 9000] The port for the metrics
            port: 9000
            ## @param flowcore-microservices.deployments.eventSourceApi.service.extraPorts.metrics.type [default: TCP] The type for the metrics
            type: TCP
      metrics:
        ## @param flowcore-microservices.deployments.eventSourceApi.metrics.enabled [default: true] Whether to enable the metrics
        enabled: true
        ## @param flowcore-microservices.deployments.eventSourceApi.metrics.port [default: 9000] The port for the metrics
        port: 9000
      ## @param flowcore-microservices.deployments.eventSourceApi.env [object] The environment variables
      env:
        ## @param flowcore-microservices.deployments.eventSourceApi.env.LOG_LEVEL [object, default: info] The log level
        LOG_LEVEL:
          value: info
        ## @param flowcore-microservices.deployments.eventSourceApi.env.SERVICE_PORT [object, default: 3000] The service port
        SERVICE_PORT:
          value: "3000"
        ## @param flowcore-microservices.deployments.eventSourceApi.env.POSTGRES_CONNECTION_STRING [object, default: postgres-connection-string in event-source-api-user-credentials secret] The PostgreSQL connection string
        POSTGRES_CONNECTION_STRING:
          valueFrom:
            secretKeyRef:
              name: event-source-api-credentials
              key: postgres-connection-string
        ## @param flowcore-microservices.deployments.eventSourceApi.env.TRANSFORMER_SECRET [object, default: transformer-secret in service-event-source-api-credentials secret] The transformer secret
        TRANSFORMER_SECRET:
          valueFrom:
            secretKeyRef:
              name: event-source-api-credentials
              key: transformer-secret
        ## @param flowcore-microservices.deployments.eventSourceApi.env.CASSANDRA_DATA_KEYSPACE [object, default: flowcore_platform_data] The Cassandra data keyspace
        CASSANDRA_DATA_KEYSPACE:
          value: flowcore_platform_data
        ## @param flowcore-microservices.deployments.eventSourceApi.env.CASSANDRA_FLOWCORE_KEYSPACE [object, default: flowcore] The Cassandra flowcore keyspace
        CASSANDRA_FLOWCORE_KEYSPACE:
          value: flowcore
        ## @param flowcore-microservices.deployments.eventSourceApi.env.CASSANDRA_CONTACT_POINTS [object, default: production-cluster-datacenter1-service.datastores.svc.cluster.local in service-event-source-api-credentials secret] The Cassandra contact points
        CASSANDRA_CONTACT_POINTS:
          value: flowcore-cassandra.flowcore.svc.cluster.local
        ## @param flowcore-microservices.deployments.eventSourceApi.env.CASSANDRA_USERNAME [object, default: cassandra-username in service-event-source-api-credentials secret] The Cassandra username
        CASSANDRA_USERNAME:
          valueFrom:
            secretKeyRef:
              name: event-source-api-credentials
              key: cassandra-username
        ## @param flowcore-microservices.deployments.eventSourceApi.env.CASSANDRA_PASSWORD [object, default: cassandra-password in service-event-source-api-credentials secret] The Cassandra password
        CASSANDRA_PASSWORD:
          valueFrom:
            secretKeyRef:
              name: event-source-api-credentials
              key: cassandra-password
        ## @param flowcore-microservices.deployments.eventSourceApi.env.REDIS_URL [object, default: redis-url in service-event-source-api-credentials secret] The Redis URL
        REDIS_URL:
          valueFrom:
            secretKeyRef:
              name: event-source-api-credentials
              key: redis-sentinel-rw
        ## @param flowcore-microservices.deployments.eventSourceApi.env.REDIS_KEY_PATTERN [object, default: event-source-api:event-cache] The Redis key pattern
        REDIS_KEY_PATTERN:
          value: event-source-api:event-cache
        ## @param flowcore-microservices.deployments.eventSourceApi.env.JWKS_URL [object, default: https://auth.flowcore.io/realms/flowcore/protocol/openid-connect/certs] The JWKS URL
        JWKS_URL:
          value: https://auth.flowcore.io/realms/flowcore/protocol/openid-connect/certs
        ## @param flowcore-microservices.deployments.eventSourceApi.env.API_KEY_URL [object, default: ttps://security-key.api.flowcore.io] The API key URL
        API_KEY_URL:
          value: ttps://security-key.api.flowcore.io
        ## @param flowcore-microservices.deployments.eventSourceApi.env.IAM_API_URL [object, default: http://service-iam-api.flowcore-public:3000] The IAM API URL
        IAM_API_URL:
          value: https://iam.api.flowcore.io
        ## @param flowcore-microservices.deployments.eventSourceApi.env.COLD_STORAGE_API_URL [object, default: http://cold-storage-api.flowcore-source:3000] The cold storage API URL
        COLD_STORAGE_API_URL:
          value: http://cold-storage-api.flowcore-source:3000
        ## @param flowcore-microservices.deployments.eventSourceApi.env.HOT_STORAGE_RETENTION_HOURS [object, default: 72] The hot storage retention hours
        HOT_STORAGE_RETENTION_HOURS:
          value: "72"
      ## @param flowcore-microservices.deployments.eventSourceApi.castAiSpot [default: preferred] The castAiSpot
      castAiSpot: preferred
      ## @param flowcore-microservices.deployments.eventSourceApi.subdomain [default: event-source] The subdomain
      subdomain: event-source
      ## @param flowcore-microservices.deployments.eventSourceApi.ingress.annotations [object] The ingress annotations
      ingress:
        annotations:
          nginx.ingress.kubernetes.io/proxy-connect-timeout: "255"
          nginx.ingress.kubernetes.io/proxy-read-timeout: "255"
          nginx.ingress.kubernetes.io/proxy-send-timeout: "255"
          nginx.ingress.kubernetes.io/server-snippet: |
            gzip on;
            gzip_comp_level 5;
    ## @section Cold Storage API
    coldStorageApi:
      ## @param flowcore-microservices.deployments.coldStorageApi.enabled [default: true] Whether to install the cold storage API
      enabled: true
      deployment:
        ## @param flowcore-microservices.deployments.coldStorageApi.deployment.image [default: service-cold-storage-api] The image
        image: service-cold-storage-api
        ## @param flowcore-microservices.deployments.coldStorageApi.deployment.tag [default: 2.10.1] The tag
        tag: 2.10.1
        ## @param flowcore-microservices.deployments.coldStorageApi.deployment.replicas [default: 2] The number of replicas
        replicas: 2
        ## @param flowcore-microservices.deployments.coldStorageApi.deployment.resources [object] The resources
        resources:
          requests:
            cpu: 2000m
            memory: 2048Mi
          limits:
            cpu: 4000m
            memory: 3042Mi
      ## @param flowcore-microservices.deployments.coldStorageApi.castAiSpot [default: preferred] The castAiSpot
      castAiSpot: preferred
      metrics:
        ## @param flowcore-microservices.deployments.coldStorageApi.metrics.enabled [default: true] Whether to enable the metrics
        enabled: true
      service:
        ## @param flowcore-microservices.deployments.coldStorageApi.service.enabled [default: true] Whether to enable the service
        enabled: true
      env:
        ## @param flowcore-microservices.deployments.coldStorageApi.env.LOG_LEVEL [object, default: info] The log level
        LOG_LEVEL:
          value: info
        ## @param flowcore-microservices.deployments.coldStorageApi.env.POSTGRES_CONNECTION_STRING [object, default: postgres-connection-string in cold-storage-api-credentials secret] The PostgreSQL connection string
        POSTGRES_CONNECTION_STRING:
          valueFrom:
            secretKeyRef:
              name: cold-storage-api-credentials
              key: postgres-connection-string
        ## @param flowcore-microservices.deployments.coldStorageApi.env.TRANSFORMER_SECRET [object, default: transformer-secret in cold-storage-api-credentials secret] The transformer secret
        TRANSFORMER_SECRET:
          valueFrom:
            secretKeyRef:
              name: cold-storage-api-credentials
              key: transformer-secret
        ## @param flowcore-microservices.deployments.coldStorageApi.env.JWKS_URL [object, default: https://auth.flowcore.io/realms/flowcore/protocol/openid-connect/certs] The JWKS URL
        JWKS_URL:
          value: https://auth.flowcore.io/realms/flowcore/protocol/openid-connect/certs
        ## @param flowcore-microservices.deployments.coldStorageApi.env.API_KEY_URL [object, default: ttps://security-key.api.flowcore.io] The API key URL
        API_KEY_URL:
          value: https://security-key.api.flowcore.io
        ## @param flowcore-microservices.deployments.coldStorageApi.env.REDIS_URL [object, default: redis-sentinel-rw in cold-storage-api-credentials secret] The Redis URL
        REDIS_URL:
          valueFrom:
            secretKeyRef:
              name: cold-storage-api-credentials
              key: redis-sentinel-rw
        ## @param flowcore-microservices.deployments.coldStorageApi.env.REDIS_KEY_PATTERN [object, default: cold-storage-api:event-cache] The Redis key pattern
        REDIS_KEY_PATTERN:
          value: cold-storage-api:event-cache
        ## @param flowcore-microservices.deployments.coldStorageApi.env.IAM_API_URL [object, default: https://iam.api.flowcore.io] The IAM API URL
        IAM_API_URL:
          value: https://iam.api.flowcore.io
        ## @param flowcore-microservices.deployments.coldStorageApi.env.AWS_REGION [object, default: eu-west-1] The AWS region
        AWS_REGION:
          value: eu-west-1
        ## @param flowcore-microservices.deployments.coldStorageApi.env.AWS_BUCKET_NAME [object, default: flowcore-platform-archive] The AWS bucket name
        AWS_BUCKET_NAME:
          value: flowcore-platform-archive
        ## @param flowcore-microservices.deployments.coldStorageApi.env.AWS_ACCESS_KEY_ID [object, default: aws-access-key-id in aws-credentials secret] The archive access key ID
        AWS_ACCESS_KEY_ID:
          valueFrom:
            secretKeyRef:
              name: aws-credentials
              key: aws-access-key-id
        ## @param flowcore-microservices.deployments.coldStorageApi.env.AWS_SECRET_ACCESS_KEY [object, default: aws-secret-access-key in aws-credentials secret] The archive secret access key
        AWS_SECRET_ACCESS_KEY:
          valueFrom:
            secretKeyRef:
              name: aws-credentials
              key: aws-secret-access-key
    ## @section Ingestion Validation Adapter
    ingestionValidationAdapter:
      ## @param flowcore-microservices.deployments.ingestionValidationAdapter.enabled [default: true] Whether to install the ingestion validation adapter
      enabled: true
      deployment:
        ## @param flowcore-microservices.deployments.ingestionValidationAdapter.deployment.tag [default: 1.2.3] The image tag
        tag: 1.2.3
        ## @param flowcore-microservices.deployments.ingestionValidationAdapter.deployment.image [default: ingestion-ingestion-validation-adapter] The image
        image: ingestion-ingestion-validation-adapter
      env:
        ## @param flowcore-microservices.deployments.ingestionValidationAdapter.env.GRPC_URL [object, default: 0.0.0.0:5000] The GRPC URL
        GRPC_URL:
          value: 0.0.0.0:5000
        ## @param flowcore-microservices.deployments.ingestionValidationAdapter.env.FLOWCORE_DATA_PUMP_URL [object, default: localhost:5001] The FLOWCORE_DATA_PUMP_URL
        FLOWCORE_DATA_PUMP_URL:
          value: localhost:5001
        ## @param flowcore-microservices.deployments.ingestionValidationAdapter.env.REDIS_MASTER_SET_NAME [object, default: sentinel-primary-set in ingestion-validation-credentials secret] The REDIS_MASTER_SET_NAME
        REDIS_MASTER_SET_NAME:
          valueFrom:
            secretKeyRef:
              name: ingestion-validation-credentials
              key: sentinel-primary-set
        ## @param flowcore-microservices.deployments.ingestionValidationAdapter.env.REDIS_SENTINELS [object, default: sentinel-hosts in ingestion-validation-credentials secret] The REDIS_SENTINELS
        REDIS_SENTINELS:
          valueFrom:
            secretKeyRef:
              name: ingestion-validation-credentials
              key: sentinel-hosts
        ## @param flowcore-microservices.deployments.ingestionValidationAdapter.env.REDIS_PASSWORD [object, default: sentinel-password in ingestion-validation-credentials secret] The REDIS_PASSWORD
        REDIS_PASSWORD:
          valueFrom:
            secretKeyRef:
              name: ingestion-validation-credentials
              key: sentinel-password
      ## @param flowcore-microservices.deployments.ingestionValidationAdapter.useTransports [array, default: nats] The useTransports
      useTransports:
        - nats
      ## @param flowcore-microservices.deployments.ingestionValidationAdapter.sidecars [object] The sidecars
      sidecars:
        ## @param flowcore-microservices.deployments.ingestionValidationAdapter.sidecars.dataPump.tag [default: 5.0.0] The image tag
        dataPump:
          tag: 5.0.0
          ## @param flowcore-microservices.deployments.ingestionValidationAdapter.sidecars.dataPump.enabled [default: true] Whether to enable the data pump
          enabled: true
          ## @param flowcore-microservices.deployments.ingestionValidationAdapter.sidecars.dataPump.image [default: legacy-data-pump] The image
          image: legacy-data-pump
          env:
            ## @param flowcore-microservices.deployments.ingestionValidationAdapter.sidecars.dataPump.env.GRPC_URL [object, default: 0.0.0.0:5001] The GRPC URL
            GRPC_URL:
              value: 0.0.0.0:5001
            ## @param flowcore-microservices.deployments.ingestionValidationAdapter.sidecars.dataPump.env.REDIS_HOST [object, default: valkey-cache-primary] The REDIS_HOST
            REDIS_HOST:
              value: valkey-cache-primary
            ## @param flowcore-microservices.deployments.ingestionValidationAdapter.sidecars.dataPump.env.REDIS_PORT [object, default: 6379] The REDIS_PORT
            REDIS_PORT:
              value: "6379"
            ## @param flowcore-microservices.deployments.ingestionValidationAdapter.sidecars.dataPump.env.DATA_PUMP_NAME [object, default: ingestion-validation-adapter] The DATA_PUMP_NAME
            DATA_PUMP_NAME:
              value: ingestion-validation-adapter
            ## @param flowcore-microservices.deployments.ingestionValidationAdapter.sidecars.dataPump.env.DATA_PUMP_MAX_TIME_BETWEEN_MSGS [object, default: 10000] The DATA_PUMP_MAX_TIME_BETWEEN_MSGS
            DATA_PUMP_MAX_TIME_BETWEEN_MSGS:
              value: "10000"
            ## @param flowcore-microservices.deployments.ingestionValidationAdapter.sidecars.dataPump.env.DATA_PUMP_MAX_HISTORY_IN_HOURS [object, default: 2500] The DATA_PUMP_MAX_HISTORY_IN_HOURS
            DATA_PUMP_MAX_HISTORY_IN_HOURS:
              value: "2500"
            ## @param flowcore-microservices.deployments.ingestionValidationAdapter.sidecars.dataPump.env.DATA_PUMP_ADAPTER_URL [object, default: localhost:5000] The DATA_PUMP_ADAPTER_URL
            DATA_PUMP_ADAPTER_URL:
              value: localhost:5000
            ## @param flowcore-microservices.deployments.ingestionValidationAdapter.sidecars.dataPump.env.FLOWCORE_AGGREGATOR [object, default: event-type.0] The FLOWCORE_AGGREGATOR
            FLOWCORE_AGGREGATOR:
              value: event-type.0
            ## @param flowcore-microservices.deployments.ingestionValidationAdapter.sidecars.dataPump.env.FLOWCORE_EVENT_TYPES [object, default: "event.event-type.created.0 event.event-type.deleted.0"] The FLOWCORE_EVENT_TYPES
            FLOWCORE_EVENT_TYPES:
              value: event.event-type.created.0,event.event-type.deleted.0
            ## @param flowcore-microservices.deployments.ingestionValidationAdapter.sidecars.dataPump.env.FLOWCORE_DATA_CORE_ID [object, default: ecc024c5-3adf-42a3-aa55-fd3620673192] The FLOWCORE_DATA_CORE_ID
            FLOWCORE_DATA_CORE_ID:
              value: ecc024c5-3adf-42a3-aa55-fd3620673192
            ## @param flowcore-microservices.deployments.ingestionValidationAdapter.sidecars.dataPump.env.FLOWCORE_EVENT_SOURCE_URL [object, default: legacy-platform-event-source-api:5000] The FLOWCORE_EVENT_SOURCE_URL
            FLOWCORE_EVENT_SOURCE_URL:
              value: legacy-platform-event-source-api:5000
            ## @param flowcore-microservices.deployments.ingestionValidationAdapter.sidecars.dataPump.env.FLOWCORE_TENANT_ID [object, default: flowcore] The FLOWCORE_TENANT_ID
            FLOWCORE_TENANT_ID:
              value: flowcore
            ## @param flowcore-microservices.deployments.ingestionValidationAdapter.sidecars.dataPump.env.LOG_LEVEL [object, default: info] The LOG_LEVEL
            LOG_LEVEL:
              value: info
    ## @section Webhook Service
    webhookService:
      ## @param flowcore-microservices.deployments.webhookService.enabled [default: true] Whether to install the webhook service
      enabled: true
      deployment:
        ## @param flowcore-microservices.deployments.webhookService.deployment.image [default: ingestion-webhook-service] The image
        image: ingestion-webhook-service
        ## @param flowcore-microservices.deployments.webhookService.deployment.tag [default: 1.25.5] The image tag
        tag: 1.25.5
        ## @param flowcore-microservices.deployments.webhookService.deployment.replicas [default: 2] The number of replicas
        replicas: 2
        ## @param flowcore-microservices.deployments.webhookService.deployment.resources [object] The resources
        resources:
          requests:
            ## @param flowcore-microservices.deployments.webhookService.deployment.resources.requests.cpu [default: 328m] The CPU request
            cpu: 328m
            ## @param flowcore-microservices.deployments.webhookService.deployment.resources.requests.memory [default: 128Mi] The memory request
            memory: 128Mi
          limits:
            ## @param flowcore-microservices.deployments.webhookService.deployment.resources.limits.cpu [default: 2000m] The CPU limit
            cpu: 2000m
            ## @param flowcore-microservices.deployments.webhookService.deployment.resources.limits.memory [default: 2048Mi] The memory limit
            memory: 2048Mi
      metrics:
        ## @param flowcore-microservices.deployments.webhookService.metrics.enabled [default: true] Whether to enable the metrics
        enabled: true
      ## @param flowcore-microservices.deployments.webhookService.useTransports [array, default: nats] The useTransports
      useTransports:
        - nats
      env:
        ## @param flowcore-microservices.deployments.webhookService.env.FLOWCORE_DATA_CORE_ID [object, default: ecc024c5-3adf-42a3-aa55-fd3620673192] The FLOWCORE_DATA_CORE_ID
        FLOWCORE_DATA_CORE_ID:
          value: ecc024c5-3adf-42a3-aa55-fd3620673192
        ## @param flowcore-microservices.deployments.webhookService.env.REDIS_MASTER_SET_NAME [object, default: sentinel-primary-set in webhook-ingestion-credentials secret] The REDIS_MASTER_SET_NAME
        REDIS_MASTER_SET_NAME:
          valueFrom:
            secretKeyRef:
              name: webhook-ingestion-credentials
              key: sentinel-primary-set
        ## @param flowcore-microservices.deployments.webhookService.env.REDIS_SENTINELS [object, default: sentinel-hosts in webhook-ingestion-credentials secret] The REDIS_SENTINELS
        REDIS_SENTINELS:
          valueFrom:
            secretKeyRef:
              name: webhook-ingestion-credentials
              key: sentinel-hosts
        ## @param flowcore-microservices.deployments.webhookService.env.REDIS_PASSWORD [object, default: sentinel-password in webhook-ingestion-credentials secret] The REDIS_PASSWORD
        REDIS_PASSWORD:
          valueFrom:
            secretKeyRef:
              name: webhook-ingestion-credentials
              key: sentinel-password
        ## @param flowcore-microservices.deployments.webhookService.env.NATS_QUEUE [object, default: ingestion-webhook] The NATS_QUEUE
        NATS_QUEUE:
          value: ingestion-webhook
        ## @param flowcore-microservices.deployments.webhookService.env.INGESTION_NATS_SERVERS [object, default: nats://nats:4222] The INGESTION_NATS_SERVERS
        INGESTION_NATS_SERVERS:
          value: nats://nats:4222
        ## @param flowcore-microservices.deployments.webhookService.env.FLOWCORE_API_KEY_URL [object, default: https://security-key.api.flowcore.io] The FLOWCORE_API_KEY_URL
        FLOWCORE_API_KEY_URL:
          value: https://security-key.api.flowcore.io
      service:
        ## @param flowcore-microservices.deployments.webhookService.service.enabled [default: true] Whether to enable the service
        enabled: true
        ## @param flowcore-microservices.deployments.webhookService.service.port [default: 3000] The service port
        port: 3000
      ## @param flowcore-microservices.deployments.webhookService.castAiSpot [default: preferred] The castAiSpot
      castAiSpot: preferred
      ## @param flowcore-microservices.deployments.webhookService.subdomain [default: webhook] The subdomain
      subdomain: webhook
      ## @param flowcore-microservices.deployments.webhookService.ingress.annotations [object] The ingress annotations
      ingress:
        annotations:
          nginx.ingress.kubernetes.io/proxy-connect-timeout: "255"
          nginx.ingress.kubernetes.io/proxy-read-timeout: "255"
          nginx.ingress.kubernetes.io/proxy-send-timeout: "255"
          nginx.ingress.kubernetes.io/server-snippet: |
            gzip on;
            gzip_comp_level 5;
    ## @section Event Recorder
    eventRecorder:
      ## @param flowcore-microservices.deployments.eventRecorder.enabled [default: true] Whether to install the event recorder
      enabled: true
      deployment:
        ## @param flowcore-microservices.deployments.eventRecorder.deployment.tag [default: 1.16.0] The image tag
        tag: 1.16.0
        ## @param flowcore-microservices.deployments.eventRecorder.deployment.replicas [default: 2] The number of replicas
        replicas: 2
        ## @param flowcore-microservices.deployments.eventRecorder.deployment.image [default: source-event-recorder] The image
        image: source-event-recorder
        ## @param flowcore-microservices.deployments.eventRecorder.deployment.resources [object] The resources
        resources:
          requests:
            ## @param flowcore-microservices.deployments.eventRecorder.deployment.resources.requests.cpu [default: 1024m] The CPU request
            cpu: 1024m
            ## @param flowcore-microservices.deployments.eventRecorder.deployment.resources.requests.memory [default: 1024Mi] The memory request
            memory: 1024Mi
          limits:
            ## @param flowcore-microservices.deployments.eventRecorder.deployment.resources.limits.cpu [default: 2048m] The CPU limit
            cpu: 2048m
            ## @param flowcore-microservices.deployments.eventRecorder.deployment.resources.limits.memory [default: 2048Mi] The memory limit
            memory: 2048Mi
      metrics:
        ## @param flowcore-microservices.deployments.eventRecorder.metrics.enabled [default: true] Whether to enable the metrics
        enabled: true
      env:
        ## @param flowcore-microservices.deployments.eventRecorder.env.LOG_LEVEL [object, default: info] The LOG_LEVEL
        LOG_LEVEL:
          value: info
        ## @param flowcore-microservices.deployments.eventRecorder.env.NATS_MAX_MESSAGES [object, default: 1000] The NATS_MAX_MESSAGES
        NATS_MAX_MESSAGES:
          value: "1000"
        ## @param flowcore-microservices.deployments.eventRecorder.env.NATS_QUEUE [object, default: source-event-recorder] The NATS_QUEUE
        NATS_QUEUE:
          value: source-event-recorder
        ## @param flowcore-microservices.deployments.eventRecorder.env.REDIS_MASTER_SET_NAME [object, default: sentinel-primary-set in event-recorder-credentials secret] The REDIS_MASTER_SET_NAME
        REDIS_MASTER_SET_NAME:
          valueFrom:
            secretKeyRef:
              name: event-recorder-credentials
              key: sentinel-primary-set
        ## @param flowcore-microservices.deployments.eventRecorder.env.REDIS_SENTINELS [object, default: sentinel-hosts in event-recorder-credentials secret] The REDIS_SENTINELS
        REDIS_SENTINELS:
          valueFrom:
            secretKeyRef:
              name: event-recorder-credentials
              key: sentinel-hosts
        ## @param flowcore-microservices.deployments.eventRecorder.env.REDIS_PASSWORD [object, default: sentinel-password in event-recorder-credentials secret] The REDIS_PASSWORD
        REDIS_PASSWORD:
          valueFrom:
            secretKeyRef:
              name: event-recorder-credentials
              key: sentinel-password
        ## @param flowcore-microservices.deployments.eventRecorder.env.CASSANDRA_CONTACT_POINTS [object, default: flowcore-cassandra.flowcore.svc.cluster.local] The CASSANDRA_CONTACT_POINTS
        CASSANDRA_CONTACT_POINTS:
          value: flowcore-cassandra.flowcore.svc.cluster.local
        ## @param flowcore-microservices.deployments.eventRecorder.env.CASSANDRA_KEYSPACE [object, default: flowcore_archive] The CASSANDRA_KEYSPACE
        CASSANDRA_KEYSPACE:
          value: flowcore_archive
        ## @param flowcore-microservices.deployments.eventRecorder.env.CASSANDRA_USERNAME [object, default: cassandra-username in event-recorder-credentials secret] The CASSANDRA_USERNAME
        CASSANDRA_USERNAME:
          valueFrom:
            secretKeyRef:
              name: event-recorder-credentials
              key: cassandra-username
        ## @param flowcore-microservices.deployments.eventRecorder.env.CASSANDRA_PASSWORD [object, default: cassandra-password in event-recorder-credentials secret] The CASSANDRA_PASSWORD
        CASSANDRA_PASSWORD:
          valueFrom:
            secretKeyRef:
              name: event-recorder-credentials
              key: cassandra-password
        ## @param flowcore-microservices.deployments.eventRecorder.env.FLOWCORE_JETSTREAM_NAME [object, default: flowcore-stored-events] The FLOWCORE_JETSTREAM_NAME
        FLOWCORE_JETSTREAM_NAME:
          value: flowcore-stored-events
        ## @param flowcore-microservices.deployments.eventRecorder.env.ARANGODB_URL [object, default: http://arango.flowcore.svc.cluster.local:8529] The ARANGODB_URL
        ARANGODB_URL:
          value: http://arango.flowcore.svc.cluster.local:8529
        ## @param flowcore-microservices.deployments.eventRecorder.env.ARANGODB_USERNAME [object, default: arangodb-username in event-recorder-credentials secret] The ARANGODB_USERNAME
        ARANGODB_USERNAME:
          valueFrom:
            secretKeyRef:
              name: event-recorder-credentials
              key: arangodb-username
        ## @param flowcore-microservices.deployments.eventRecorder.env.ARANGODB_PASSWORD [object, default: arangodb-password in event-recorder-credentials secret] The ARANGODB_PASSWORD
        ARANGODB_PASSWORD:
          valueFrom:
            secretKeyRef:
              name: event-recorder-credentials
              key: arangodb-password
        ## @param flowcore-microservices.deployments.eventRecorder.env.ARANGODB_DATABASE [object, default: archiving] The ARANGODB_DATABASE
        ARANGODB_DATABASE:
          value: archiving
        ## @param flowcore-microservices.deployments.eventRecorder.env.FLOWCORE_PARALLEL_WRITE [object, default: 20] The FLOWCORE_PARALLEL_WRITE
        FLOWCORE_PARALLEL_WRITE:
          value: "20"
        ## @param flowcore-microservices.deployments.eventRecorder.env.FLOWCORE_WRITE_BATCH_SIZE [object, default: 1000] The FLOWCORE_WRITE_BATCH_SIZE
        FLOWCORE_WRITE_BATCH_SIZE:
          value: "1000"
      ## @param flowcore-microservices.deployments.eventRecorder.useTransports [array, default: nats] The useTransports
      useTransports:
        - nats
    ## @section Event Archiver
    eventArchiver:
      ## @param flowcore-microservices.deployments.eventArchiver.enabled [default: true] Whether to install the event archiver
      enabled: true
      metrics:
        ## @param flowcore-microservices.deployments.eventArchiver.metrics.enabled [default: true] Whether to enable the metrics
        enabled: true
      deployment:
        ## @param flowcore-microservices.deployments.eventArchiver.deployment.image [default: source-event-archiver] The image
        image: source-event-archiver
        ## @param flowcore-microservices.deployments.eventArchiver.deployment.tag [default: 1.19.0] The image tag
        tag: 1.19.0
        ## @param flowcore-microservices.deployments.eventArchiver.deployment.replicas [default: 2] The number of replicas
        replicas: 2
        ## @param flowcore-microservices.deployments.eventArchiver.deployment.resources [object] The resources
        resources:
          requests:
            ## @param flowcore-microservices.deployments.eventArchiver.deployment.resources.requests.cpu [default: 100m] The CPU request
            cpu: 100m
            ## @param flowcore-microservices.deployments.eventArchiver.deployment.resources.requests.memory [default: 128Mi] The memory request
            memory: 128Mi
          limits:
            ## @param flowcore-microservices.deployments.eventArchiver.deployment.resources.limits.cpu [default: 2000m] The CPU limit
            cpu: 2000m
            ## @param flowcore-microservices.deployments.eventArchiver.deployment.resources.limits.memory [default: 4096Mi] The memory limit
            memory: 4096Mi
      env:
        ## @param flowcore-microservices.deployments.eventArchiver.env.ARCHIVING_CHUNK_SIZE [object, default: 10000] The ARCHIVING_CHUNK_SIZE
        ARCHIVING_CHUNK_SIZE:
          value: "10000"
        ## @param flowcore-microservices.deployments.eventArchiver.env.ARANGODB_URL [object, default: http://arango.flowcore.svc.cluster.local:8529] The ARANGODB_URL
        ARANGODB_URL:
          value: http://arango.flowcore.svc.cluster.local:8529
        ## @param flowcore-microservices.deployments.eventArchiver.env.ARANGODB_USERNAME [object, default: arangodb-username in event-archiver-credentials secret] The ARANGODB_USERNAME
        ARANGODB_USERNAME:
          valueFrom:
            secretKeyRef:
              name: event-archiver-credentials
              key: arangodb-username
        ## @param flowcore-microservices.deployments.eventArchiver.env.ARANGODB_PASSWORD [object, default: arangodb-password in event-archiver-credentials secret] The ARANGODB_PASSWORD
        ARANGODB_PASSWORD:
          valueFrom:
            secretKeyRef:
              name: event-archiver-credentials
              key: arangodb-password
        ## @param flowcore-microservices.deployments.eventArchiver.env.ARANGODB_DATABASE [object, default: archiving] The ARANGODB_DATABASE
        ARANGODB_DATABASE:
          value: archiving
        ## @param flowcore-microservices.deployments.eventArchiver.env.REDIS_MASTER_SET_NAME [object, default: sentinel-primary-set in event-archiver-credentials secret] The REDIS_MASTER_SET_NAME
        REDIS_MASTER_SET_NAME:
          valueFrom:
            secretKeyRef:
              name: event-archiver-credentials
              key: sentinel-primary-set
        ## @param flowcore-microservices.deployments.eventArchiver.env.REDIS_SENTINELS [object, default: sentinel-hosts in event-archiver-credentials secret] The REDIS_SENTINELS
        REDIS_SENTINELS:
          valueFrom:
            secretKeyRef:
              name: event-archiver-credentials
              key: sentinel-hosts
        ## @param flowcore-microservices.deployments.eventArchiver.env.REDIS_PASSWORD [object, default: sentinel-password in event-archiver-credentials secret] The REDIS_PASSWORD
        REDIS_PASSWORD:
          valueFrom:
            secretKeyRef:
              name: event-archiver-credentials
              key: sentinel-password
        ## @param flowcore-microservices.deployments.eventArchiver.env.ARCHIVING_ACCESS_KEY_ID [object, default: aws-access-key-id in aws-credentials secret] The ARCHIVING_ACCESS_KEY_ID
        ARCHIVING_ACCESS_KEY_ID:
          valueFrom:
            secretKeyRef:
              name: aws-credentials
              key: aws-access-key-id
        ## @param flowcore-microservices.deployments.eventArchiver.env.ARCHIVING_SECRET_ACCESS_KEY [object, default: aws-secret-access-key in aws-credentials secret] The ARCHIVING_SECRET_ACCESS_KEY
        ARCHIVING_SECRET_ACCESS_KEY:
          valueFrom:
            secretKeyRef:
              name: aws-credentials
              key: aws-secret-access-key
        ## @param flowcore-microservices.deployments.eventArchiver.env.ARCHIVING_BUCKET_NAME [object, default: flowcore-archive] The ARCHIVING_BUCKET_NAME
        ARCHIVING_BUCKET_NAME:
          value: flowcore-archive
        ## @param flowcore-microservices.deployments.eventArchiver.env.ARCHIVING_REGION [object, default: eu-west-1] The ARCHIVING_REGION
        ARCHIVING_REGION:
          value: eu-west-1
        ## @param flowcore-microservices.deployments.eventArchiver.env.ARCHIVING_CONCURRENT_PROCESSES [object, default: 5] The ARCHIVING_CONCURRENT_PROCESSES
        ARCHIVING_CONCURRENT_PROCESSES:
          value: "5"
        ## @param flowcore-microservices.deployments.eventArchiver.env.ARCHIVING_DEPLOYMENT_TYPE [object, default: dedicated] The ARCHIVING_DEPLOYMENT_TYPE
        ARCHIVING_DEPLOYMENT_TYPE:
          value: dedicated
        ## @param flowcore-microservices.deployments.eventArchiver.env.CASSANDRA_CONTACT_POINTS [object, default: flowcore-cassandra.flowcore.svc.cluster.local] The CASSANDRA_CONTACT_POINTS
        CASSANDRA_CONTACT_POINTS:
          value: flowcore-cassandra.flowcore.svc.cluster.local
        ## @param flowcore-microservices.deployments.eventArchiver.env.CASSANDRA_KEYSPACE [object, default: flowcore_archive] The CASSANDRA_KEYSPACE
        CASSANDRA_KEYSPACE:
          value: flowcore_archive
        ## @param flowcore-microservices.deployments.eventArchiver.env.CASSANDRA_USERNAME [object, default: cassandra-username in event-archiver-credentials secret] The CASSANDRA_USERNAME
        CASSANDRA_USERNAME:
          valueFrom:
            secretKeyRef:
              name: event-archiver-credentials
              key: cassandra-username
        ## @param flowcore-microservices.deployments.eventArchiver.env.CASSANDRA_PASSWORD [object, default: cassandra-password in event-archiver-credentials secret] The CASSANDRA_PASSWORD
        CASSANDRA_PASSWORD:
          valueFrom:
            secretKeyRef:
              name: event-archiver-credentials
              key: cassandra-password
    ## @section Resource Lock Manager
    resourceLockManager:
      ## @param flowcore-microservices.deployments.resourceLockManager.enabled [default: true] Whether to install the resource lock manager
      enabled: true
      metrics:
        ## @param flowcore-microservices.deployments.resourceLockManager.metrics.enabled [default: true] Whether to enable the metrics
        enabled: true
      deployment:
        ## @param flowcore-microservices.deployments.resourceLockManager.deployment.image [default: core-resource-lock-manager] The image
        image: core-resource-lock-manager
        ## @param flowcore-microservices.deployments.resourceLockManager.deployment.tag [default: 1.1.0] The image tag
        tag: 1.1.0
        ## @param flowcore-microservices.deployments.resourceLockManager.deployment.replicas [default: 2] The number of replicas
        replicas: 2
      env:
        ## @param flowcore-microservices.deployments.resourceLockManager.env.NATS_QUEUE [object, default: resource-lock-manager] The NATS_QUEUE
        NATS_QUEUE:
          value: resource-lock-manager
        ## @param flowcore-microservices.deployments.resourceLockManager.env.REDIS_HOST [object, default: valkey-cache-primary] The REDIS_HOST
        REDIS_HOST:
          value: valkey-cache-primary
        ## @param flowcore-microservices.deployments.resourceLockManager.env.REDIS_PORT [object, default: 6379] The REDIS_PORT
        REDIS_PORT:
          value: "6379"
      ## @param flowcore-microservices.deployments.resourceLockManager.useTransports [array, default: nats] The useTransports
      useTransports:
        - nats
    ## @section Service Kube Log API
    serviceKubeLogApi:
      ## @param flowcore-microservices.deployments.serviceKubeLogApi.enabled [default: true] Whether to install the service kube log api
      enabled: true
      deployment:
        ## @param flowcore-microservices.deployments.serviceKubeLogApi.deployment.replicas [default: 2] The number of replicas
        replicas: 2
        ## @param flowcore-microservices.deployments.serviceKubeLogApi.deployment.tag [default: 1.4.1] The image tag
        tag: 1.4.1
        ## @param flowcore-microservices.deployments.serviceKubeLogApi.deployment.image [default: service-kube-log-api] The image
        image: service-kube-log-api
        ## @param flowcore-microservices.deployments.serviceKubeLogApi.deployment.serviceAccount [default: flowcore-kube-log-reader] The service account
        serviceAccount: flowcore-kube-log-reader
      service:
        ## @param flowcore-microservices.deployments.serviceKubeLogApi.service.enabled [default: true] Whether to enable the service
        enabled: true
        ## @param flowcore-microservices.deployments.serviceKubeLogApi.service.port [default: 3000] The service port
        port: 3000
      env:
        ## @param flowcore-microservices.deployments.serviceKubeLogApi.env.NODE_TLS_REJECT_UNAUTHORIZED [object, default: 0] The NODE_TLS_REJECT_UNAUTHORIZED
        NODE_TLS_REJECT_UNAUTHORIZED:
          value: "0"
        ## @param flowcore-microservices.deployments.serviceKubeLogApi.env.JWKS_URL [object, default: https://auth.flowcore.io/realms/flowcore/protocol/openid-connect/certs] The JWKS_URL
        JWKS_URL:
          value: https://auth.flowcore.io/realms/flowcore/protocol/openid-connect/certs
        ## @param flowcore-microservices.deployments.serviceKubeLogApi.env.IAM_API_URL [object, default: https://iam.api.flowcore.io] The IAM_API_URL
        IAM_API_URL:
          value: https://iam.api.flowcore.io
      ## @param flowcore-microservices.deployments.serviceKubeLogApi.castAiSpot [default: preferred] The castAiSpot
      castAiSpot: preferred
      ## @param flowcore-microservices.deployments.serviceKubeLogApi.subdomain [default: logs] The subdomain
      subdomain: logs
      ## @param flowcore-microservices.deployments.serviceKubeLogApi.ingress.annotations [object] The ingress annotations
      ingress:
        annotations:
          nginx.ingress.kubernetes.io/proxy-connect-timeout: "255"
          nginx.ingress.kubernetes.io/proxy-read-timeout: "255"
          nginx.ingress.kubernetes.io/proxy-send-timeout: "255"
          nginx.ingress.kubernetes.io/server-snippet: |
            gzip on;
            gzip_comp_level 5;
    ## @section Service Delete Manager API
    serviceDeleteManagerApi:
      ## @param flowcore-microservices.deployments.serviceDeleteManagerApi.enabled [default: false] Whether to install the service delete manager api
      enabled: true
      deployment:
        ## @param flowcore-microservices.deployments.serviceDeleteManagerApi.deployment.image [default: service-delete-manager-api] The image
        image: service-delete-manager-api
        ## @param flowcore-microservices.deployments.serviceDeleteManagerApi.deployment.tag [default: 1.0.9] The image tag
        tag: 1.0.9
        ## @param flowcore-microservices.deployments.serviceDeleteManagerApi.deployment.replicas [default: 2] The number of replicas
        replicas: 2
      service:
        ## @param flowcore-microservices.deployments.serviceDeleteManagerApi.service.enabled [default: true] Whether to enable the service
        enabled: true
        ## @param flowcore-microservices.deployments.serviceDeleteManagerApi.service.port [default: 3000] The service port
        port: 3000
      env:
        ## @param flowcore-microservices.deployments.serviceDeleteManagerApi.env.LOG_LEVEL [default: info] The LOG_LEVEL
        LOG_LEVEL:
          value: info
        ## @param flowcore-microservices.deployments.serviceDeleteManagerApi.env.SERVICE_PORT [default: 3000] The SERVICE_PORT
        SERVICE_PORT:
          value: "3000"
        ## @param flowcore-microservices.deployments.serviceDeleteManagerApi.env.FLOWCORE_DEPLOYMENT_TYPE [default: dedicated] The FLOWCORE_DEPLOYMENT_TYPE
        FLOWCORE_DEPLOYMENT_TYPE:
          value: dedicated
        ## @param flowcore-microservices.deployments.serviceDeleteManagerApi.env.FLOWCORE_API_KEY [object, default: api-key in tenant-credentials secret] The FLOWCORE_API_KEY
        FLOWCORE_API_KEY:
          valueFrom:
            secretKeyRef:
              name: tenant-credentials
              key: api-key
        ## @param flowcore-microservices.deployments.serviceDeleteManagerApi.env.FLOWCORE_TENANT_API_URL [object, default: https://tenant.api.flowcore.io] The FLOWCORE_TENANT_API_URL
        FLOWCORE_TENANT_API_URL:
          value: https://tenant.api.flowcore.io
        ## @param flowcore-microservices.deployments.serviceDeleteManagerApi.env.FLOWCORE_DEDICATED_TENANT_ID [object, default: tenant-id in tenant-credentials secret] The FLOWCORE_DEDICATED_TENANT_ID
        FLOWCORE_DEDICATED_TENANT_ID:
          valueFrom:
            secretKeyRef:
              name: tenant-credentials
              key: tenant-id
        ## @param flowcore-microservices.deployments.serviceDeleteManagerApi.env.FLOWCORE_DEDICATED_LICENSE_KEY [object, default: license-key in tenant-credentials secret] The FLOWCORE_DEDICATED_LICENSE_KEY
        FLOWCORE_DEDICATED_LICENSE_KEY:
          valueFrom:
            secretKeyRef:
              name: tenant-credentials
              key: license-key
        ## @param flowcore-microservices.deployments.serviceDeleteManagerApi.env.SDK_API_KEY [object, default: api-key in tenant-credentials secret] The SDK_API_KEY
        SDK_API_KEY:
          valueFrom:
            secretKeyRef:
              name: tenant-credentials
              key: api-key
        ## @param flowcore-microservices.deployments.serviceDeleteManagerApi.env.SDK_API_KEY_ID [object, default: api-key-id in tenant-credentials] The SDK_API_KEY_ID
        SDK_API_KEY_ID:
          valueFrom:
            secretKeyRef:
              name: tenant-credentials
              key: api-key-id
        ## @param flowcore-microservices.deployments.serviceDeleteManagerApi.env.LOCK_REDIS_URL [object, default: redis-url in delete-manager-credentials secret] The LOCK_REDIS_URL
        LOCK_REDIS_URL:
          valueFrom:
            secretKeyRef:
              name: delete-manager-credentials
              key: redis-url
        ## @param flowcore-microservices.deployments.serviceDeleteManagerApi.env.QUEUE_REDIS_URL [object, default: redis-sentinel-rw in delete-manager-credentials secret] The QUEUE_REDIS_URL
        QUEUE_REDIS_URL:
          valueFrom:
            secretKeyRef:
              name: delete-manager-credentials
              key: redis-sentinel-rw
        ## @param flowcore-microservices.deployments.serviceDeleteManagerApi.env.QUEUE_NAME [object, default: delete-manager-queue] The QUEUE_NAME
        QUEUE_NAME:
          value: delete-manager-queue
        ## @param flowcore-microservices.deployments.serviceDeleteManagerApi.env.CASSANDRA_LOCAL_DATA_CENTER [object, default: datacenter1] The CASSANDRA_LOCAL_DATA_CENTER
        CASSANDRA_LOCAL_DATA_CENTER:
          value: datacenter1
        ## @param flowcore-microservices.deployments.serviceDeleteManagerApi.env.CASSANDRA_CONSISTENCY [object, default: 6] The CASSANDRA_CONSISTENCY
        CASSANDRA_CONSISTENCY:
          value: "6"
        ## @param flowcore-microservices.deployments.serviceDeleteManagerApi.env.CASSANDRA_CONTACT_POINTS [object, default: flowcore-cassandra.flowcore.svc.cluster.local] The CASSANDRA_CONTACT_POINTS
        CASSANDRA_CONTACT_POINTS:
          value: flowcore-cassandra.flowcore.svc.cluster.local
        ## @param flowcore-microservices.deployments.serviceDeleteManagerApi.env.CASSANDRA_KEYSPACE [object, default: flowcore_archive] The CASSANDRA_KEYSPACE
        CASSANDRA_KEYSPACE:
          value: flowcore_archive
        ## @param flowcore-microservices.deployments.serviceDeleteManagerApi.env.CASSANDRA_USERNAME [object, default: cassandra-username in delete-manager-credentials secret] The CASSANDRA_USERNAME
        CASSANDRA_USERNAME:
          valueFrom:
            secretKeyRef:
              name: delete-manager-credentials
              key: cassandra-username
        ## @param flowcore-microservices.deployments.serviceDeleteManagerApi.env.CASSANDRA_PASSWORD [object, default: cassandra-password in delete-manager-credentials] The CASSANDRA_PASSWORD
        CASSANDRA_PASSWORD:
          valueFrom:
            secretKeyRef:
              name: delete-manager-credentials
              key: cassandra-password
        ## @param flowcore-microservices.deployments.serviceDeleteManagerApi.env.EVENT_STORAGE_TYPE [object, default: aws] The EVENT_STORAGE_TYPE
        EVENT_STORAGE_TYPE:
          value: aws
        ## @param flowcore-microservices.deployments.serviceDeleteManagerApi.env.EVENT_STORAGE_BUCKET [object, default: flowcore-platform-archive] The EVENT_STORAGE_BUCKET
        EVENT_STORAGE_BUCKET:
          value: flowcore-platform-archive
        ## @param flowcore-microservices.deployments.serviceDeleteManagerApi.env.EVENT_STORAGE_AWS_ACCESS_KEY_ID [object, default: aws-access-key-id in aws-credentials secret] The EVENT_STORAGE_AWS_ACCESS_KEY_ID
        EVENT_STORAGE_AWS_ACCESS_KEY_ID:
          valueFrom:
            secretKeyRef:
              name: aws-credentials
              key: aws-access-key-id
        ## @param flowcore-microservices.deployments.serviceDeleteManagerApi.env.EVENT_STORAGE_AWS_SECRET_ACCESS_KEY [object, default: aws-secret-access-key in aws-credentials secret] The EVENT_STORAGE_AWS_SECRET_ACCESS_KEY
        EVENT_STORAGE_AWS_SECRET_ACCESS_KEY:
          valueFrom:
            secretKeyRef:
              name: aws-credentials
              key: aws-secret-access-key
        ## @param flowcore-microservices.deployments.serviceDeleteManagerApi.env.EVENT_STORAGE_AWS_REGION [object, default: eu-west-1] The EVENT_STORAGE_AWS_REGION
        EVENT_STORAGE_AWS_REGION:
          value: eu-west-1
        ## @param flowcore-microservices.deployments.serviceDeleteManagerApi.env.JWKS_URL [object, default: https://auth.flowcore.io/realms/flowcore/protocol/openid-connect/certs] The JWKS_URL
        JWKS_URL:
          value: https://auth.flowcore.io/realms/flowcore/protocol/openid-connect/certs
        ## @param flowcore-microservices.deployments.serviceDeleteManagerApi.env.API_KEY_URL [object, default: https://security-key.api.flowcore.io] The API_KEY_URL
        API_KEY_URL:
          value: https://security-key.api.flowcore.io
        ## @param flowcore-microservices.deployments.serviceDeleteManagerApi.env.IAM_API_URL [object, default: https://iam.api.flowcore.io] The IAM_API_URL
        IAM_API_URL:
          value: https://iam.api.flowcore.io
      ## @param flowcore-microservices.deployments.serviceDeleteManagerApi.castAiSpot [default: preferred] The castAiSpot
      castAiSpot: preferred
      ## @param flowcore-microservices.deployments.serviceDeleteManagerApi.subdomain [default: delete-manager] The subdomain
      subdomain: delete-manager
      ingress:
        ## @param flowcore-microservices.deployments.serviceDeleteManagerApi.ingress.annotations [object] The ingress annotations
        annotations:
          nginx.ingress.kubernetes.io/proxy-connect-timeout: "255"
          nginx.ingress.kubernetes.io/proxy-read-timeout: "255"
          nginx.ingress.kubernetes.io/proxy-send-timeout: "255"
          nginx.ingress.kubernetes.io/server-snippet: |
            gzip on;
            gzip_comp_level 5;
    ## @section Service Dedicated Configurator
    serviceDedicatedConfigurator:
      ## @param flowcore-microservices.deployments.serviceDedicatedConfigurator.enabled [default: true] Whether to install the service dedicated configurator
      enabled: true
      deployment:
        ## @param flowcore-microservices.deployments.serviceDedicatedConfigurator.deployment.image [default: service-dedicated-configurator] The image
        image: service-dedicated-configurator
        ## @param flowcore-microservices.deployments.serviceDedicatedConfigurator.deployment.tag [default: 1.1.2] The image tag
        tag: 1.1.2
        ## @param flowcore-microservices.deployments.serviceDedicatedConfigurator.deployment.replicas [default: 1] The number of replicas
        replicas: 1
      env:
        ## @param flowcore-microservices.deployments.serviceDedicatedConfigurator.env.SCHEDULER_ENABLED [default: "true"] Whether to enable the scheduler
        SCHEDULER_ENABLED:
          value: "true"
        ## @param flowcore-microservices.deployments.serviceDedicatedConfigurator.env.SCHEDULER_CRON [default: "*/30 * * * * *"] The scheduler cron
        SCHEDULER_CRON:
          value: "*/30 * * * * *"
        ## @param flowcore-microservices.deployments.serviceDedicatedConfigurator.env.TENANT_API_KEY [object, default: api-key in tenant-credentials secret] The TENANT_API_KEY
        TENANT_API_KEY:
          valueFrom:
            secretKeyRef:
              name: tenant-credentials
              key: api-key
        ## @param flowcore-microservices.deployments.serviceDedicatedConfigurator.env.TENANT_API_KEY_ID [object, default: api-key-id in tenant-credentials secret] The TENANT_API_KEY_ID
        TENANT_API_KEY_ID:
          valueFrom:
            secretKeyRef:
              name: tenant-credentials
              key: api-key-id
        ## @param flowcore-microservices.deployments.serviceDedicatedConfigurator.env.TENANT_LICENSE_KEY [object, default: license-key in tenant-credentials secret] The TENANT_LICENSE_KEY
        TENANT_LICENSE_KEY:
          valueFrom:
            secretKeyRef:
              name: tenant-credentials
              key: license-key
        ## @param flowcore-microservices.deployments.serviceDedicatedConfigurator.env.TENANT_ID [object, default: tenant-id in tenant-credentials secret] The TENANT_ID
        TENANT_ID:
          valueFrom:
            secretKeyRef:
              name: tenant-credentials
              key: tenant-id
        ## @param flowcore-microservices.deployments.serviceDedicatedConfigurator.env.TENANT_DEDICATED_DOMAIN [default: example.com] The TENANT_DEDICATED_DOMAIN
        TENANT_DEDICATED_DOMAIN:
          value: example.com
        ## @param flowcore-microservices.deployments.serviceDedicatedConfigurator.env.TENANT_DEDICATED_CONFIGURATION_REPO_URL [default: https://configuration.api.flowcore.io] The TENANT_DEDICATED_CONFIGURATION_REPO_URL
        TENANT_DEDICATED_CONFIGURATION_REPO_URL:
          value: https://github.com/example/dedicated-configuration
        ## @param flowcore-microservices.deployments.serviceDedicatedConfigurator.env.TENANT_DEDICATED_CONFIGURATION_PATH [default: ".config/"] The TENANT_DEDICATED_CONFIGURATION_PATH
        TENANT_DEDICATED_CONFIGURATION_PATH:
          value: ".config/dedicated.json"
      volumes:
        ## @param flowcore-microservices.deployments.serviceDedicatedConfigurator.volumes.secret [object] The configuration secret
        secret:
          ## @param flowcore-microservices.deployments.serviceDedicatedConfigurator.volumes.secret.secret [default: dedicated-configuration] The secret name
          secret: dedicated-configuration
          ## @param flowcore-microservices.deployments.serviceDedicatedConfigurator.volumes.mountPath [default: /usr/src/app/.config] The mount path
          mountPath: /usr/src/app/.config/dedicated.json
          ## @param flowcore-microservices.deployments.serviceDedicatedConfigurator.volumes.subPath [default: github-private-key] The sub path
          subPath: dedicated.json
          ## @param flowcore-microservices.deployments.serviceDedicatedConfigurator.volumes.type [default: secret] The type
          type: secret
      ## @param flowcore-microservices.deployments.serviceDedicatedConfigurator.castAiSpot [default: preferred] The castAiSpot
      castAiSpot: preferred
