## @section Flowcore Platform Configuration
flowcore:
  ## @param flowcore.keyspace [object] The keyspace configuration
  keyspace:
    ## @param flowcore.keyspace.replicationFactor [default: 3] The number of replicas
    replicationFactor: 3

## @section Cassandra Configuration
cassandra:
  ## @param cassandra.enabled [default: true] Whether to install the Cassandra instance
  enabled: true
  ## @param cassandra.dbUser [object] The Cassandra user configuration
  dbUser:
    ## @param cassandra.dbUser.existingSecret [default: platform-source-cassandra-user] The name of the existing secret containing the Cassandra user and password
    existingSecret: "platform-source-cassandra-user"
  ## @param cassandra.cluster [object] The Cassandra cluster configuration
  cluster:
    ## @param cassandra.cluster.name [default: platform-source] The name of the Cassandra cluster
    name: platform-source
    ## @param cassandra.cluster.seedCount [default: 2] The number of seed nodes
    seedCount: 2
    ## @param cassandra.cluster.numTokens [default: 16] The number of tokens
    numTokens: 16
    ## @param cassandra.cluster.datacenter [default: datacenter1] The datacenter name
    datacenter: datacenter1
  ## @param cassandra.replicaCount [default: 3] The number of replicas
  replicaCount: 3
  ## @param cassandra.resources [object] The resources for the Cassandra instance
  resources:
    requests:
      ## @param cassandra.resources.requests.cpu [default: 8] The CPU request
      cpu: 8
      ## @param cassandra.resources.requests.memory [default: 16Gi] The memory request
      memory: 16Gi
    limits:
      ## @param cassandra.resources.limits.cpu [default: 8] The CPU limit
      cpu: 8
      ## @param cassandra.resources.limits.memory [default: 16Gi] The memory limit
      memory: 16Gi
  ## @param cassandra.persistence [object] The persistence configuration
  persistence:
    ## @extra cassandra.persistence.storageClass [string] The storage class for the persistent volume
    ## @param cassandra.persistence.size [default: 512Gi] The size of the persistent volume
    size: 512Gi
  ## @param cassandra.metrics [object] The metrics configuration
  metrics:
    ## @param cassandra.metrics.enabled [default: true] Whether to enable the metrics
    enabled: true
  jvm:
    ## @param cassandra.jvm.maxHeapSize [default: 2048m] The maximum heap size (1/4 or 1/2 of the total memory)
    maxHeapSize: 8G
    ## @param cassandra.jvm.newHeapSize [default: 1024m] The new heap size (1/4 of the max heap size)
    newHeapSize: 2G
  ## @param cassandra.initDBConfigMap [default: platform-source-initdb] The name of the config map to use for initializing the database
  initDBConfigMap: platform-source-initdb

## @section Valkey HA Configuration
valkey-ha:
  ## @param valkey-ha.enabled [default: true] Whether to install the Valkey HA instance
  enabled: true
  ## @param valkey-ha.nameOverride [default: valkey-ha] The name override
  nameOverride: valkey-ha
  ## @param valkey-ha.fullnameOverride [default: valkey-ha] The full name override
  fullnameOverride: valkey-ha
  ## @param valkey-ha.architecture [default: replication] The architecture to use
  architecture: replication
  sentinel:
    ## @param valkey-ha.sentinel.enabled [default: true] Whether to install the Sentinel instance
    enabled: true
    ## @param valkey-ha.sentinel.primarySet [default: fcmprimary] The primary set to use
    primarySet: fcmprimary
    ## @extra valkey-ha.sentinel.resources [object] The resources for the Sentinel instance
  auth:
    ## @param valkey-ha.auth.enabled [default: true] Whether to install the Auth instance
    enabled: true
    ## @param valkey-ha.auth.sentinel [default: true] Whether to use the Sentinel instance
    sentinel: true
    ## @param valkey-ha.auth.existingSecret [default: platform-source-valkey-ha] The name of the existing secret containing the Auth password
    existingSecret: platform-source-valkey-ha
    ## @param valkey-ha.auth.existingSecretPasswordKey [default: password] The key in the existing secret containing the Auth password
    existingSecretPasswordKey: password
  primary:
    ## @param valkey-ha.primary.enabled [default: true] Whether to install the primary instance
    enabled: true
    ## @param valkey-ha.primary.replicaCount [default: 1] The number of replicas
    replicaCount: 1
    ## @extra valkey-ha.primary.resources [object] The resources for the primary instance
    persistence:
      ## @param valkey-ha.primary.persistence.enabled [default: true] Whether to install the persistence
      enabled: true
      ## @param valkey-ha.primary.persistence.size [default: 50Gi] The size of the persistent volume
      size: 50Gi
      ## @extra valkey-ha.primary.persistence.storageClass [string] The storage class for the persistent volume
  replica:
    ## @param valkey-ha.replica.enabled [default: true] Whether to install the replica instance
    enabled: true
    ## @param valkey-ha.replica.replicaCount [default: 3] The number of replicas
    replicaCount: 3
    ## @extra valkey-ha.replica.resources [object] The resources for the replica instance
    persistence:
      ## @param valkey-ha.replica.persistence.enabled [default: true] Whether to install the persistence
      enabled: true
      ## @param valkey-ha.replica.persistence.size [default: 50Gi] The size of the persistent volume
      size: 50Gi
      ## @extra valkey-ha.replica.persistence.storageClass [string] The storage class for the persistent volume

## @section Valkey Single Configuration
valkey-single:
  ## @param valkey-single.enabled [default: false] Whether to install the Valkey single instance
  enabled: true
  ## @param valkey-single.nameOverride [default: valkey-single] The name override
  nameOverride: valkey-single
  ## @param valkey-single.fullnameOverride [default: valkey-single] The full name override
  fullnameOverride: valkey-single
  ## @param valkey-single.architecture [default: single] The architecture to use
  architecture: standalone
  auth:
    ## @param valkey-single.auth.enabled [default: true] Whether to install the Auth instance
    enabled: true
    ## @param valkey-single.auth.existingSecret [default: platform-source-valkey-single] The name of the existing secret containing the Auth password
    existingSecret: platform-source-valkey-single
    ## @param valkey-single.auth.existingSecretPasswordKey [default: password] The key in the existing secret containing the Auth password
    existingSecretPasswordKey: password
  primary:
    ## @param valkey-single.primary.enabled [default: true] Whether to install the primary instance
    enabled: true
    ## @param valkey-single.primary.replicaCount [default: 1] The number of replicas
    replicaCount: 1
    ## @extra valkey-single.primary.resources [object] The resources for the primary instance
    persistence:
      ## @param valkey-single.primary.persistence.enabled [default: true] Whether to install the persistence
      enabled: true
      ## @param valkey-single.primary.persistence.size [default: 50Gi] The size of the persistent volume
      size: 50Gi
      ## @extra valkey-single.primary.persistence.storageClass [string] The storage class for the persistent volume

## @section NATS Configuration

nats:
  ## @param nats.nameOverride [default: nats] The name override
  nameOverride: nats
  ## @param nats.fullnameOverride [default: nats] The full name override
  fullnameOverride: nats
  ## @param nats.enabled [default: true] Whether to install the NATS instance
  enabled: true
  ## @param nats.config [object] The NATS configuration
  config:
    cluster:
      ## @param nats.config.cluster.enabled [default: true] Whether to install the NATS cluster
      enabled: true
      ## @param nats.config.cluster.replicas [default: 3] The number of replicas
      replicas: 3
    jetstream:
      ## @param nats.config.jetstream.enabled [default: true] Whether to install the NATS JetStream instance
      enabled: true
      ## @param nats.config.jetstream.fileStore.pvc.size [default: 10Gi] The size of the persistent volume
      fileStore:
        pvc:
          ## @param nats.config.jetstream.fileStore.pvc.size [default: 10Gi] The size of the persistent volume
          size: 10Gi
          ## @extra nats.config.jetstream.fileStore.pvc.storageClass [string] The storage class for the persistent volume
  container:
    env:
      ## @param nats.container.env.GOMEMLIMIT [default: 7GiB] The memory limit, 90% of the memory limit, different from k8s units, suffix must be B, KiB, MiB, GiB, or TiB
      GOMEMLIMIT: 7GiB
    merge:
      resources:
        requests:
          ## @param nats.container.merge.resources.requests.cpu [default: 2] The CPU request
          cpu: "2"
          ## @param nats.container.merge.resources.requests.memory [default: 8Gi] The memory request
          memory: 8Gi
        limits:
          ## @param nats.container.merge.resources.limits.cpu [default: 2] The CPU limit
          cpu: "2"
          ## @param nats.container.merge.resources.limits.memory [default: 8Gi] The memory limit
          memory: 8Gi

## @section PostgreSQL HA Configuration
postgresql-ha:
  ## @param postgresql-ha.enabled [default: true] Whether to install the PostgreSQL HA instance
  enabled: true
  ## @param postgresql-ha.nameOverride [default: postgresql-ha] The name override
  nameOverride: postgresql-ha
  ## @param postgresql-ha.fullnameOverride [default: postgresql-ha] The full name override
  fullnameOverride: postgresql-ha
  ## @param postgresql-ha.postgresql [object] The PostgreSQL configuration
  postgresql:
    ## @param postgresql-ha.postgresql.existingSecret [default: postgresql-ha] The name of the existing secret containing the PostgreSQL credentials
    existingSecret: postgresql-ha
  ## @param postgresql-ha.pgpool [object] The pgPool configuration
  pgpool:
    ## @param postgresql-ha.pgpool.existingSecret [default: postgresql-ha] The name of the existing secret containing the pgPool credentials
    existingSecret: postgresql-ha
    ## @param postgresql-ha.pgpool.replicaCount [default: 3] The number of replicas
    replicaCount: 3
  persistence:
    ## @param postgresql-ha.persistence.enabled [default: true] Whether to install the persistence
    enabled: true
    ## @param postgresql-ha.persistence.size [default: 200Gi] The size of the persistent volume
    size: 200Gi
    ## @extra postgresql-ha.persistence.storageClass [string] The storage class for the persistent volume
  metrics:
    ## @param postgresql-ha.metrics.enabled [default: true] Whether to install the metrics
    enabled: true
    ## @param postgresql-ha.metrics.annotations [object] The annotations for the metrics
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "9187"

## @section Ensure Credentials
ensureCredentials:
  image:
    ## @param ensureCredentials.image.repository [default: flowcoreio/job-create-dedicated-credentials] The image repository
    repository: flowcoreio/job-create-dedicated-credentials
    ## @param ensureCredentials.image.tag [default: 1.1.0] The image tag
    tag: 1.1.1
  ## @param ensureCredentials.resources [object] The resources for the ensure credentials job
  resources:
    ## @param ensureCredentials.resources.limits.cpu [default: 100m] The CPU limit
    limits:
      ## @param ensureCredentials.resources.limits.cpu [default: 100m] The CPU limit
      cpu: 100m
      ## @param ensureCredentials.resources.limits.memory [default: 128Mi] The memory limit
      memory: 128Mi
    ## @param ensureCredentials.resources.requests.cpu [default: 50m] The CPU request
    requests:
      ## @param ensureCredentials.resources.requests.cpu [default: 50m] The CPU request
      cpu: 50m
      ## @param ensureCredentials.resources.requests.memory [default: 64Mi] The memory request
      memory: 64Mi

## @section Flowcore Platform Common Configuration
flowcore-microservices:
  ## @param flowcore-microservices.enabled [default: true] Whether to install the Flowcore Platform Services
  enabled: true
  ## @param flowcore-microservices.imageRepository [default: flowcore-io] The image repository
  imageRepository: flowcoreio
  ## @param flowcore-microservices.oidcWellKnownUrl [default: https://auth.flowcore.io/realms/flowcore/.well-known/openid-configuration] The OIDC well-known URL
  oidcWellKnownUrl: https://auth.flowcore.io/realms/flowcore/.well-known/openid-configuration
  transport:
    nats:
      NATS_SERVERS:
        ## @param flowcore-microservices.transport.nats.NATS_SERVERS.value [default: nats://nats:4222] The NATS servers
        value: nats://nats:4222
  deployments:
    ## @section Flowcore Ingestion Channel
    ingestionChannel:
      ## @param flowcore-microservices.deployments.ingestionChannel.enabled [default: true] Whether to install the Ingestion Channel instance
      enabled: true
      deployment:
        ## @param flowcore-microservices.deployments.ingestionChannel.deployment.image [default: service-ingestion] The image
        image: service-ingestion
        ## @param flowcore-microservices.deployments.ingestionChannel.deployment.tag [default: 1.1.0] The tag
        tag: 1.2.0
        ## @param flowcore-microservices.deployments.ingestionChannel.deployment.replicas [default: 1] The number of replicas
        replicas: 1
      metrics:
        ## @param flowcore-microservices.deployments.ingestionChannel.metrics.enabled [default: true] Whether to install the metrics
        enabled: true
        ## @param flowcore-microservices.deployments.ingestionChannel.metrics.port [default: 3001] The port
        port: 4000
      ## @param flowcore-microservices.deployments.ingestionChannel.useTransports [default: nats] The transports to use
      useTransports:
        - nats
      env:
        ## @param flowcore-microservices.deployments.ingestionChannel.env.REDIS_URL [object] The Redis URL
        REDIS_URL:
          valueFrom:
            secretKeyRef:
              name: ingestion-channel-credentials
              key: redis-url
        ## @param flowcore-microservices.deployments.ingestionChannel.env.METRICS_SERVICE_NAME [object, default: ingestion_channel] The metrics service name
        METRICS_SERVICE_NAME:
          value: ingestion_channel
        ## @param flowcore-microservices.deployments.ingestionChannel.env.DEFAULT_TTL_ON_STORED_EVENT [object, default: 259200] The default TTL on stored event in seconds
        DEFAULT_TTL_ON_STORED_EVENT:
          value: "259200"
        ## @extra flowcore-microservices.deployments.ingestionChannel.env.NATS_QUEUE [object] The NATS queue
        ## @param flowcore-microservices.deployments.ingestionChannel.env.CASSANDRA_CONTACT_POINTS [object, default: flowcore-cassandra] The Cassandra contact points
        CASSANDRA_CONTACT_POINTS:
          value: flowcore-cassandra
        ## @param flowcore-microservices.deployments.ingestionChannel.env.CASSANDRA_USERNAME [object, default: cassandra-username in ingestion-channel-credentials secret] The Cassandra username
        CASSANDRA_USERNAME:
          valueFrom:
            secretKeyRef:
              name: ingestion-channel-credentials
              key: cassandra-username
        ## @param flowcore-microservices.deployments.ingestionChannel.env.CASSANDRA_PASSWORD [object, default: cassandra-password in ingestion-channel-credentials secret] The Cassandra password
        CASSANDRA_PASSWORD:
          valueFrom:
            secretKeyRef:
              name: ingestion-channel-credentials
              key: cassandra-password
        ## @param flowcore-microservices.deployments.ingestionChannel.env.CASSANDRA_FLOWCORE_KEYSPACE [object, default: flowcore] The Cassandra Flowcore keyspace
        CASSANDRA_FLOWCORE_KEYSPACE:
          value: flowcore
        ## @param flowcore-microservices.deployments.ingestionChannel.env.CASSANDRA_CLIENT_KEYSPACE [object, default: flowcore_platform_data] The Cassandra client keyspace
        CASSANDRA_CLIENT_KEYSPACE:
          value: flowcore_platform_data
        ## @param flowcore-microservices.deployments.ingestionChannel.env.LOG_LEVEL [object, default: info] The log level
        LOG_LEVEL:
          value: info
        ## @param flowcore-microservices.deployments.ingestionChannel.env.FLOWCORE_DEPLOYMENT_TYPE [object] The Flowcore deployment type, supported values: dedicated, cloud
        FLOWCORE_DEPLOYMENT_TYPE:
          value: "dedicated"
        ## @param flowcore-microservices.deployments.ingestionChannel.env.FLOWCORE_TENANT_ID [object, default: tenant-id in tenant-credentials secret] The Flowcore tenant ID
        FLOWCORE_TENANT_ID:
          valueFrom:
            secretKeyRef:
              name: tenant-credentials
              key: tenant-id
        ## @param flowcore-microservices.deployments.ingestionChannel.env.FLOWCORE_TENANT_API_URL [object, default: https://tenant.api.flowcore.io] The Flowcore tenant API URL
        FLOWCORE_TENANT_API_URL:
          value: https://tenant.api.flowcore.io
        ## @param flowcore-microservices.deployments.ingestionChannel.env.FLOWCORE_API_KEY [object, default: api-key in tenant-credentials secret] The Flowcore API key
        FLOWCORE_API_KEY:
          valueFrom:
            secretKeyRef:
              name: tenant-credentials
              key: api-key

    ## @section Flowcore Legacy Client Event Source API
    legacyClientEventSourceApi:
      ## @param flowcore-microservices.deployments.legacyClientEventSourceApi.enabled [default: true] Whether to install the legacy client event source API
      enabled: true
      deployment:
        ## @param flowcore-microservices.deployments.legacyClientEventSourceApi.deployment.image [default: source-event-source] The image
        image: source-event-source
        ## @param flowcore-microservices.deployments.legacyClientEventSourceApi.deployment.tag [default: 2.10.3] The tag
        tag: 2.10.3
        ## @param flowcore-microservices.deployments.legacyClientEventSourceApi.deployment.replicas [default: 1] The number of replicas
        replicas: 1
      env:
        ## @param flowcore-microservices.deployments.legacyClientEventSourceApi.env.CASSANDRA_CONTACT_POINTS [object, default: flowcore-cassandra] The Cassandra contact points
        CASSANDRA_CONTACT_POINTS:
          value: flowcore-cassandra
        ## @param flowcore-microservices.deployments.legacyClientEventSourceApi.env.CASSANDRA_KEYSPACE [object, default: flowcore_platform_data] The Cassandra keyspace
        CASSANDRA_KEYSPACE:
          value: flowcore_platform_data
        ## @param flowcore-microservices.deployments.legacyClientEventSourceApi.env.CASSANDRA_USERNAME [object, default: cassandra-username in legacy-client-event-source-credentials secret] The Cassandra username
        CASSANDRA_USERNAME:
          valueFrom:
            secretKeyRef:
              name: legacy-client-event-source-credentials
              key: cassandra-username
        ## @param flowcore-microservices.deployments.legacyClientEventSourceApi.env.CASSANDRA_PASSWORD [object, default: cassandra-password in legacy-client-event-source-credentials secret] The Cassandra password
        CASSANDRA_PASSWORD:
          valueFrom:
            secretKeyRef:
              name: legacy-client-event-source-credentials
              key: cassandra-password
        ## @param flowcore-microservices.deployments.legacyClientEventSourceApi.env.GRPC_URL [object, default: 0.0.0.0:5000] The GRPC URL
        GRPC_URL:
          value: 0.0.0.0:5000
        ## @param flowcore-microservices.deployments.legacyClientEventSourceApi.env.CASSANDRA_DEFAULT_REPLICATION_STRATEGY [object, default: NetworkTopologyStrategy] The Cassandra default replication strategy
        CASSANDRA_DEFAULT_REPLICATION_STRATEGY:
          value: NetworkTopologyStrategy
        ## @param flowcore-microservices.deployments.legacyClientEventSourceApi.env.CASSANDRA_DEFAULT_REPLICATION_FACTOR [object, default: 3] The Cassandra default replication factor
        CASSANDRA_DEFAULT_REPLICATION_FACTOR:
          value: "3"
        ## @param flowcore-microservices.deployments.legacyClientEventSourceApi.env.ARCHIVE_BUCKET_NAME [object, default: flowcore-platform-archive] The archive bucket name
        ARCHIVE_BUCKET_NAME:
          value: flowcore-platform-archive
        ## @param flowcore-microservices.deployments.legacyClientEventSourceApi.env.ARCHIVE_REGION [object, default: eu-west-1] The archive region
        ARCHIVE_REGION:
          value: "eu-west-1"
        ## @param flowcore-microservices.deployments.legacyClientEventSourceApi.env.ARCHIVE_ACCESS_KEY_ID [object, default: archive-access-key-id in legacy-client-event-source-credentials secret] The archive access key ID
        ARCHIVE_ACCESS_KEY_ID:
          valueFrom:
            secretKeyRef:
              name: legacy-client-event-source-credentials
              key: archive-access-key-id
        ## @param flowcore-microservices.deployments.legacyClientEventSourceApi.env.ARCHIVE_SECRET_ACCESS_KEY [object, default: archive-secret-access-key in legacy-client-event-source-credentials secret] The archive secret access key
        ARCHIVE_SECRET_ACCESS_KEY:
          valueFrom:
            secretKeyRef:
              name: legacy-client-event-source-credentials
              key: archive-secret-access-key
        ## @param flowcore-microservices.deployments.legacyClientEventSourceApi.env.HOT_STORAGE_RETENTION [object, default: 3] The hot storage retention
        HOT_STORAGE_RETENTION:
          value: "3"
        ## @param flowcore-microservices.deployments.legacyClientEventSourceApi.env.CACHE_USE_REMOTE [object, default: true] Whether to use the remote cache
        CACHE_USE_REMOTE:
          value: "true"
        ## @param flowcore-microservices.deployments.legacyClientEventSourceApi.env.CACHE_REDIS_URL [object, default: redis-url in legacy-client-event-source-credentials secret] The Redis URL
        CACHE_REDIS_URL:
          valueFrom:
            secretKeyRef:
              name: legacy-client-event-source-credentials
              key: redis-url
      service:
        ## @param flowcore-microservices.deployments.legacyClientEventSourceApi.service.enabled [default: true] Whether to install the service
        enabled: true
        extraPorts:
          grpc:
            ## @param flowcore-microservices.deployments.legacyClientEventSourceApi.service.extraPorts.grpc.port [default: 5000] The port for the GRPC service
            port: "5000"

    ## @section Flowcore Legacy Platform Event Source API
    legacyPlatformEventSourceApi:
      ## @param flowcore-microservices.deployments.legacyPlatformEventSourceApi.enabled [default: true] Whether to install the legacy platform event source API
      enabled: true
      deployment:
        ## @param flowcore-microservices.deployments.legacyPlatformEventSourceApi.deployment.image [default: source-event-source] The image
        image: source-event-source
        ## @param flowcore-microservices.deployments.legacyPlatformEventSourceApi.deployment.tag [default: 2.10.3] The tag
        tag: 2.10.3
        ## @param flowcore-microservices.deployments.legacyPlatformEventSourceApi.deployment.replicas [default: 1] The number of replicas
        replicas: 1
      env:
        ## @param flowcore-microservices.deployments.legacyPlatformEventSourceApi.env.CASSANDRA_CONTACT_POINTS [object, default: flowcore-cassandra] The Cassandra contact points
        CASSANDRA_CONTACT_POINTS:
          value: flowcore-cassandra
        ## @param flowcore-microservices.deployments.legacyPlatformEventSourceApi.env.CASSANDRA_KEYSPACE [object, default: flowcore] The Cassandra keyspace
        CASSANDRA_KEYSPACE:
          value: flowcore
        ## @param flowcore-microservices.deployments.legacyPlatformEventSourceApi.env.CASSANDRA_USERNAME [object, default: cassandra-username in legacy-platform-event-source-credentials secret] The Cassandra username
        CASSANDRA_USERNAME:
          valueFrom:
            secretKeyRef:
              name: legacy-platform-event-source-credentials
              key: cassandra-username
        ## @param flowcore-microservices.deployments.legacyPlatformEventSourceApi.env.CASSANDRA_PASSWORD [object, default: cassandra-password in legacy-platform-event-source-credentials secret] The Cassandra password
        CASSANDRA_PASSWORD:
          valueFrom:
            secretKeyRef:
              name: legacy-platform-event-source-credentials
              key: cassandra-password
        ## @param flowcore-microservices.deployments.legacyPlatformEventSourceApi.env.GRPC_URL [object, default: 0.0.0.0:5000] The GRPC URL
        GRPC_URL:
          value: 0.0.0.0:5000
        ## @param flowcore-microservices.deployments.legacyPlatformEventSourceApi.env.CASSANDRA_DEFAULT_REPLICATION_STRATEGY [object, default: NetworkTopologyStrategy] The Cassandra default replication strategy
        CASSANDRA_DEFAULT_REPLICATION_STRATEGY:
          value: NetworkTopologyStrategy
        ## @param flowcore-microservices.deployments.legacyPlatformEventSourceApi.env.CASSANDRA_DEFAULT_REPLICATION_FACTOR [object, default: 3] The Cassandra default replication factor
        CASSANDRA_DEFAULT_REPLICATION_FACTOR:
          value: "3"
        ## @param flowcore-microservices.deployments.legacyPlatformEventSourceApi.env.ARCHIVE_BUCKET_NAME [object, default: flowcore-platform-archive] The archive bucket name
        ARCHIVE_BUCKET_NAME:
          value: flowcore-platform-archive
        ## @param flowcore-microservices.deployments.legacyPlatformEventSourceApi.env.ARCHIVE_REGION [object, default: eu-west-1] The archive region
        ARCHIVE_REGION:
          value: "eu-west-1"
        ## @param flowcore-microservices.deployments.legacyPlatformEventSourceApi.env.ARCHIVE_ACCESS_KEY_ID [object, default: archive-access-key-id in legacy-client-event-source-credentials secret] The archive access key ID
        ARCHIVE_ACCESS_KEY_ID:
          valueFrom:
            secretKeyRef:
              name: legacy-client-event-source-credentials
              key: archive-access-key-id
        ## @param flowcore-microservices.deployments.legacyPlatformEventSourceApi.env.ARCHIVE_SECRET_ACCESS_KEY [object, default: archive-secret-access-key in legacy-client-event-source-credentials secret] The archive secret access key
        ARCHIVE_SECRET_ACCESS_KEY:
          valueFrom:
            secretKeyRef:
              name: legacy-client-event-source-credentials
              key: archive-secret-access-key
        ## @param flowcore-microservices.deployments.legacyPlatformEventSourceApi.env.HOT_STORAGE_RETENTION [object, default: 3] The hot storage retention
        HOT_STORAGE_RETENTION:
          value: "3"
        ## @param flowcore-microservices.deployments.legacyPlatformEventSourceApi.env.CACHE_USE_REMOTE [object, default: true] Whether to use the remote cache
        CACHE_USE_REMOTE:
          value: "true"
        ## @param flowcore-microservices.deployments.legacyPlatformEventSourceApi.env.CACHE_REDIS_URL [object, default: redis-url in legacy-platform-event-source-credentials secret] The Redis URL
        CACHE_REDIS_URL:
          valueFrom:
            secretKeyRef:
              name: legacy-platform-event-source-credentials
              key: redis-url
      service:
        ## @param flowcore-microservices.deployments.legacyPlatformEventSourceApi.service.enabled [default: true] Whether to install the service
        enabled: true
        extraPorts:
          grpc:
            ## @param flowcore-microservices.deployments.legacyPlatformEventSourceApi.service.extraPorts.grpc.port [default: 5000] The port for the GRPC service
            port: "5000"
